MAT: 1A

# 360fly ReST API

This API document outlines additions or modifications to the base 360fly REST specification that are required to
achieve full functionality of the 360Fly HD and 4K cameras.

A number of the requests and responses use JSON syntax. Where possible,
we use [JSON Schema](http://json-schema.org) to define these messages.  A guide
to JSON Schema is maintained at
[Understanding JSON Schema](http://spacetelescope.github.io/understanding-json-schema/index.html).

The REST API is a command and control mechanism through network interfaces to  
360fly, specifically WiFi. In many cases, similar functionality is expected to be 
available through the Bluetooth LE profile as well. Each URL is preceded by `/360fly`.

## Global Request Requirements

* All endpoints should correctly validate expected content-types with the with the content-type header provided by the client.

# Global Response Headers

These response headers are to be included with _every_ response

+ Headers

                        X-360fly-API-Version: v0.15.0

## Authentication

The 360fly REST API will conform to [RFC 2617](https://tools.ietf.org/rfc/rfc2617.txt) regarding 
the use of authentication to provide an initial layer of security for users.
* All endpoints shall use authentication unless an explicit exception is made. 
* Endpoints that require HTTPS communcications should shall support both digest and basic authentication.
* Endpoints that support HTTP communcations shall require HTTP digest authentication to prevent transmitting clear-text passwords.


# Group General Device Control and Status

## Status [/360fly/status]

##### __camera status modes__
Value | Meaning
---|---
_0_  |   Off
_1_  |   Booting
_2_  |   Sleeping
_3_  |   Ready
_4_  |   Recording
_5_  |   USB mass storage
_6_  |   Firmware updating
_7_  |   Webcam
_usb_  | USB connection present | 1
       | No USB connection      | 0
_low_battery_ | Battery level normal | false
 | Battery level too low | true
_low_storage_ | Storage level normal | false
 | Storage level too low | true
_high_temperature_ | Temperature normal | false
 | Temperature too high | true

* Note: `Webcam` status is only available on Firefly (version 1.5) cameras.

##### *Mode Substate Bitflags (Deprecated)*
Substate | Value
--- | ---
none | 0x0000
charging | 0x4000
charged | 0x8000
low battery | 0x0100
low storage | 0x0200
high temperature | 0x0400

##### *rec_error Bitflags (Deprecated)*
Error | Value
--- | ---
none | 0x00
storage too low | 0x01
storage error | 0x02
battery too low | 0x04
temperature too high | 0x08

##### *Battery*
Characteristic | Definition | Return Value
--- | --- | ---
_charge_mode_   | Device Not Charging   | 0
                | Device Charging       | 1 
                | Device Charged        | 2
                | Error                 | _any other number_
_level_         | Current battery charge level (in percentage)  | 0 to 100
_status_        | Identical to _charge_mode_    |

##### *Storage*
Characteristic | Definition
--- | ---
_capacity_  | _Total_ storage avaiable on the device (in kilobytes).
_usage_     | Amount of _used_ storage on the device (as a percentage).
_available_ | Amount of _free_ (remaining) storage on the device (in kilobytes).

##### *Power*
Characteristic | Definition | Return Value
--- | --- | ---
_mode_  | Device in "Off" state     | 0
        | Device in "Boot" state    | 1
        | Device in "On" state      | 2


### Retrieve status [GET]

+ Response 200 (application/json)
 
 + Body 
    
            {
                "cam_status" : {"mode":3, "usb":true, "low_battery":false, "low_storage":false, "high_temperature":false, "rec_error":0},
                "battery":{"charge_mode": 1, "level":70, "status":0},
                "storage":{"capacity":30893120,"usage":10,"available":1234},
                "power" : {"mode":2}
            }
            

## Info [/360fly/info]

### Retrieve Device Information Command [GET]

Retrieves 360Fly device information in the form of the Bluetooth GATT Device Information Profile. Refer to the
[Bluetooth GATT Device Information Profile](https://developer.bluetooth.org/TechnologyOverview/Pages/DIS.aspx) 
specification for more information.

* The _info_ command supports _both_ **authenticated** and **non-authenticated** requests.
* The _info_ command does **NOT** require HTTPS

#### __Response Data__
Characteristic | Definition | Return Value
--- | --- | ---
_model_no_      | Model number of device                | 360FLYBLK
_ble_version_   | Version of BLE software               | B-00B0
_serial_no_     | Device serial number                  | 123456789012345678
_hw_version_    | Version of device hardware            | PCB-00
_mac_addr_      | Device MAC Address                    | E4:BA:D9:C0:00:46
_name_          | Name assigned to device               | 360Fly Device
_system_id_     | System identifier                     | 4600c0fe ffd9bae4    
_manufacturer_  | Manufacturer of device                | 360fly
_sw_version_    | Version of device software            | 1.0.0

+ Response 200 (application/json)

    + Body
    
            {
                "model_no": "360FLYBLK",
                "ble_version": "B-00B8",
                "serial_no": "123456789012345678",
                "hw_version": "PCB-00",
                "mac_address": "E4:BA:D9:C0:00:46",
                "name": "360Fly Device",
                "system_id": "4600c0fe ffd9bae4",
                "manufacturer" : "360fly",
                "sw_version": "1.0.0",
            }



## Name [/360fly/name]

### Retrieve Camera Name Command [GET]

Retrieves the name of the 360Fly device as set by the user. 
This field is equivalent to hostname or the WiFi AP SSID.

* The _retrieve name_ command requires **authentication**.

+ Response 200 (text/plain)

    + Body
    
            360FlyCameraName

### Change/Update Camera Name Command [PUT]

Changes/Updates the user assigned name of the 360Fly device. 

* The _change/update name_ command requires **authentication**.
* Note: Restrictions in length and character set may cause the request to fail.
    * The _maximum_ name length is 18 characters.
    * Only "printable" characters (`isprint()` in c) are allowed.
* **_Changing the 360Fly device name will cause the WiFi connection to break_**.  Therefore, no response is sent.

+ Request (text/plain)

    + Body
            
            New360FlyCameraName

+ Response 204


## Identity [/360fly/id]

* Note: ID endpoint is only available on Firefly (version 1.5) cameras.

* The `password` property is never returned, but can be modified via a `PUT` request.
* Successful `PUT` requests will cause all WiFi AP clients to disconnect since the AP SSID or password will change

+ Attributes (object)
 + name: 360fly (string, required, sample) - Name of 360fly. This is the name presented to users and the AP SSID
 + password: 00000000 (string, required, default) - Password of 360fly. Used for http authentication and WiFi AP security. password is never returned

### Retrieve identity [GET]

+ Response 200 (application/json)
+ Attributes (object)
 + name: 360fly (string, required, sample)

### Change identity [PUT]
+ Attributes (object)
 + name: my360fly (string, optional, sample) - change the 360fly's name
 + password: myPassPhrase (string, optional, sample) - change 360fly's password

+ Request (application/json)

+ Response 200 (application/json)
+ Attributes (object)
 + name: my360fly (string, required, sample)


## USB [/360fly/usb]

* Note: USB endpoint is only available on Firefly (version 1.5) cameras.

* When request to change, either `mode` or `persistentMode` is to be changed, not both.  
* In fly1.5 (Firefly), changing `persistentMode` will not only change the persistent mode, but also changes the current mode.

+ Attributes (object)
 + mode: 1 (number, optional, default) - USB mode: 1 - mass storage mode; 2 - USB video streaming
 + persistentMode: 1 (number, optional) - default USB mode after reboot


### Retrieve USB Configuration [GET]

+ Response 200 (application/json)
 + Attributes (USB)

### Modify USB Configuration [PUT]

+ Request (application/json)
 + Attributes (object)
        + mode: 2 (number, required) - Enabling USB video streaming

+ Response 200 (application/json)
 + Attributes (object)
        + mode: 2 (number, required)
        + persistentMode: 1 (number, required)

+ Request (application/json)
 + Attributes (object)
        + persistentMode: 2 (number, required)

+ Response 200 (application/json)
 + Attributes (object)
        + mode: 1 (number, required)
        + persistentMode: 2 (number, required)

### Reset USB Configuration to default [DELETE]
+ Response 204
 + Attributes (USB)


## Power Mode [/360fly/power]

### Retrieve Power Mode Command [GET]

Retrieves power mode status of the 360Fly device.

* The _retrieve power mode_ command requires **authentication**.
* Note: The 360Fly device shall only return _2_ (device "On") since a network connection is required.

#### __Response Data__
Characteristic | Definition | Return Value
--- | --- | ---
_mode_  | Device in "Off" state     | 0
        | Device in "Boot" state    | 1
        | Device in "On" state      | 2

+ Response 200 (application/json)

    + Body
    
            {
                "mode":2
            }

### Set Power Mode Command [POST]

This command is used to shutdown or reset the 360Fly device. 

* The _set power mode_ command requires **authentication**.
* Successful shutdowns and resets result in a 204 ( _No Content_ ) response.

#### __Command Data__
Command | Action
--- | ---
`"mode":0`  | _Shutdown_ the 360Fly device.
`"mode":1`  | _Reset_ the 360Fly device.

+ Request (application/json)

    + Body
    
            {
                "mode":0
            }

+ Response 204


## Time [/360fly/time]

### Retrieve Device Time Command [GET]

Retrieves the current time stored on the 360Fly device.

* The _retrieve device time_ command requires **authentication**.
* The _time_ field is presented in ISO 8601 format.
* The 360Fly device uses Coordinated Universal Time (UTC/GMT).
* The _time data_ is in military (24-hour) time format.

##### __Response Data__
Characteristic | Definition | Return Value
--- | --- | ---
_value_ |   Date: YYYY-MM-DD    |   YYYY-MM-DD **T** HH:MM:SS **Z**
        |   Time: HH:MM:SS      |

+ Response 200 (application/json)

    + Body
    
            {
                "value":"2016-01-22T15:09:10Z"
            }

### Set Device Time Command [POST]

Sets the 360Fly device clock to the specified time.

* The _set device time_ command requires **authentication**.
* The _time_ field must comply with the ISO 8601 format.

#### __Command Data__
Command | Action
--- | ---
`"value":2016-01-12T11:20:10Z`  |   Sets _date_ to 2016-01-12.
                                |   Sets _time_ to 11:20:10.

+ Request (application/json)

    + Body
    
            {
                "value":"2016-01-13T15:09:10Z"
            }

+ Response 204


## Firmware [/360fly/firmware]

### Retrieve Firmware Status Command [GET]

Retrieves the device firmware version number and creation date information.

* The _retrieve firmware info_ command requires **authentication**.
* The _time_ field is presented in ISO 8601 format.

##### __Response Data__
Characteristic | Definition | Return Value
--- | --- | ---
_version_   |   Firmware Version            |   "X.Y.Z"
_created_   |   Creation date and time      |   " WD MM DD HH:MM:SS TZ YYYY"
            |                               |   WD: Weekday (3 chars)
            |                               |   MM: Month (3 chars)
            |                               |   DD: Day (2 digits)
            |                               |   HH: Hours (2 digits)
            |                               |   MM: Minutes (2 digits)
            |                               |   SS: Seconds (2 digits)
            |                               |   TZ: Time Zone (3 digits)
            |                               |   YYYY: Year (4 digits)

+ Response 200 (application/json)

    + Body
    
            {
                "version":"1.0.0",
                "created":"Fri Jan 22 15:09:10 UTC 2015"
            }

### Firmware Update Command [POST]

Upload a firmware binary file and initiate an update to the 360Fly device.

* The _firmware update_ command requires **authentication**.
* The _version number_ field only supports numerical characters.
* Must specify full path to .fly file location.

+ Request (application/octet-stream)

        (Firmware binary)

+ Response 202 (text/html)

        Firmware accepted. Your device will restart momentarily.
        
+ Response 400 (application/json)

    + Body
    
            {
                "error":5
            }

+ Response 403 (text/html)

        Battery level too low. Battery must be at 30 percent or higher
    
+ Response 403 (text/html)

        Uploaded file in unexpected format
        
+ Response 403 (text/html)

        Issuing certificate is untrusted
        
+ Response 403 (text/html)

        Firmware could not be verified against issuing certificate
        
+ Response 403 (text/html)

        Firmware update is not primed

+ Response 409 (application/json)

        Firmware cannot be updated at this time
        
+ Response 415 (application/json)

        Uploaded file in unexpected format *not implemented
            
+ Response 500 (text/html)

        Internal server error


## Device Storage [/360fly/storage]

### Retrieve Storage Information Command [GET]

Retrieves the SD card storage details from the 360Fly device.

* The _retrieve storage info_ command requires **authentication**.

##### __Response Data__
Characteristic | Definition | Return Value
--- | --- | ---
_available_         |   Amount of _free_ (remaining) storage on the device (in kilobytes).  |   15175104
_used_              |   Amount of _used_ storage on the device (in kilobytes).              |   112992
_minutesRemaining_  |   Available storage minutes remaining (if recording).                 |   101.16736
_capacity_          |   _Total_ storage avaiable on the device (in kilobytes).              |   15288096
_sdstatus_          |   Ready (normal)                                                      |   0
                    |   Full                                                                |   1
                    |   Reformatting                                                        |   2
                    
+ Response 200 (application/json)

    + Body

            { 
                "available": 15175104,
                "used": 112992,
                "MinutesRemaining": 101.16736,
                "capacity" : 15288096,
                "sdstatus": 0
            }


## Battery [/360fly/battery]

### Retrieve Battery Status Command [GET]

Retrieves the battery status details from the 360Fly device.

* The _retrieve storage information_ command requires **authentication**.
* `minutesRemaining` field is only an estimate.
* Responds with 500 (Internal Server Error) if battery status is unavailable.

##### __Response Data__
Characteristic | Definition | Return Value
--- | --- | ---
_charge_mode_       |   Not Charging    |   0
                    |   Charging        |   1
                    |   Charged         |   2
_level_             |   Percent battery charge remaining.   |   0% - 100%
_status_            |   Identical to _charge_mode_.         |
_minutes_remaining_ |   Minutes of record time remaining on present battery charge level.   |

+ Response 200 (application/json)

    + Body
    
            { 
                "charge_mode":0,
                "level":50,
                "status":0,
                "minutesRemaining":60
            }
        
    + Schema
    
            {
                "type":"object",
                "properties":{
                    "level": {
                    "type": "integer",
                    "description": "battery charge level, between 0 and 1"
                    },
                    "status": {
                        "type": "integer",
                        "description": "
                            0: normal
                            1: charging
                            3: charged
                        "
                    },
                    "minutesRemaining": {
                        "type":"integer",
                        "description": "Estimation of the number of minutes of battery life remaining"
                    }
                }
            }
            
+ Response 500 (text/html)

        Internal server error


## Ping [/360fly/ping]

### Ping Webserver Command [GET]

Ping the 360Fly device web server.

* The _ping webserver_ command supports _both_ **authenticated** and **non-authenticated** requests.
* The _time_ field is presented in ISO 8601 format.
* The 360Fly device uses Coordinated Universal Time (UTC/GMT).
* The _time data_ is in military (24-hour) time format.

##### __Response Data__
Characteristic | Definition | Return Value
--- | --- | ---
_datetime_  |   Date: YYYY-MM-DD    |   YYYY-MM-DD **T** HH:MM:SS **Z**
            |   Time: HH:MM:SS      |

+ Response 200 (application/json)

    + Body
        
            {
                "datetime":"2016-02-03T10:02:00Z"
            }


# Group Camera

Collection of user configurable preferences.

## Preference Collection [/360fly/preferences]

Collection of user configurable preferences.

+ Model (application/json)

    + Body
    
            { 
                "IsActivated":0,
                "Registration":0
            }


### Retrieve All Device Preferences Command [GET]

Retrieves **_ALL_** user configurable preferences on the 360Fly device.

* The _retrieve **all** device preferences_ command requires **authentication**.

##### __Response Data__
Characteristic | Definition | Return Value
--- | --- | ---
_IsActivated_       |   360Fly Device not activated     |   0
                    |   360Fly Device activated         |   1
_Registration_      |   360Fly Device not registered    |   0
                    |   360Fly Device registered        |   1

+ Response 200

    [Preference Collection][]
    
+ Response 500 (text/html)

    + Body

            Internal Server Error

### Update/Create All Device Preferences Command [PUT]

Update **_ALL_** existing user preferences or create them if they do not exist.

* The set/update **all** device preferences_ command requires **authentication**.
* Returns the full user preference list.

##### __Command Data__
Command | Action
--- | ---
`"IsActivated":0`   |   Deactivate the 360Fly device
`"IsActivated":1`   |   Activate the 360Fly device
`"Registration":0`  |   Un-register 360Fly device
`"Registration":1`  |   Register 360Fly device

+ Request (application/json)

    + Body
    
            {
                "key": "value"
            }
            
    + Schema
            
            {
                "type": "object",
                "properties": {
                    "key": {
                        "type":"string",
                        "description": "Any value the client wishes to Update on the device. Does not have to be a string"
                    }
                }
            }


+ Response 200

    [Preference Collection][]

### Remove/Reset All Device Preferences Command [DELETE]

Removes/Resets **_ALL_** user preferences on of the 360Fly device.

* The _remove/reset **all** device preferences_ command requires **authentication**.
* Some preferences may be given default values instead of being deleted entirely.
* Returns the full user preference list (refer to the _**Retrieve All Device Preferences**_ section).

##### __Default Preference Settings__
Characteristic | Value
--- | ---
_IsActivated_       |   0
_Registration_      |   0

+ Response 200

    [Preference Collection][]
    
            
## Specific Device Preferences [/360fly/preferences/{preference}]

Collection of user configurable preferences that can be retrieved or modified individually.

+ Parameters
    + preference (required, string, `IsActivated`) ... The preference to perform the action on.

### Retrieve Specific Preference Value Command [GET]

Retrieves a **_specific_** user configurable preference on the 360Fly device.

* Any/All _retrieve **specific** device preference_ commands require **authentication**.
* Refer to the _**Retrieve All Device Preferences**_ section for a list of retrievable preferences.
* Responds with 404 (Not Found) if preference does not exist.

+ Response 200 (text/html)
  
        (preference value)
            
+ Response 404 (text/html)

        Preference does not exist
        
### Update/Create Specific Preference Value Command [PUT]

Update a **_specific_** existing user preference or create one if it does not exist.

* Any/All _update/create **specific** device preference_ commands require **authentication**.
* Refer to the _**Update/Create All Device Preferences**_ section for a list of settable preferences.
* Note: Returns a 204 ( No Content ) response.
+ Request (text/html)
    
        (IsActivated Value)

+ Response 204

### Remove/Reset Specific Preference Value Command [DELETE]

Removes/Resets a **_specific_** user preference on the 360Fly device.

* Any/All _remove/reset **specific** device preference_ commands require **authentication**.
* Refer to the _**Remove/Reset All Device Preferences**_ section for a list of delete-able/resettable preferences.
* Note: A successful **delete** returns a 204 ( _No Content_ ) response.
* Note: A successful **reset** returns a 200 ( _OK - request succeeded_ ) response and the reset value.

+ Response 204

+ Response 200 (text/html)

        (default preference value)
        
+ Response 404 (text/html)

        Preference not found


## Camera Config [/360fly/camera/config]

Operating mode of the camera

* Note: Config endpoint only available on Firefly (version 1.5) cameras.

+ Attributes (object)
 + profile: standard_2880sq_24fps (string, required, default) - Current camera profile (see /camera/profiles). Determines media formats for recorded and liveview video, audio, sensordata, and metadata 
 + maxChapterDuration (number, required, sample) - Max duration, in seconds, for a chapter in a recording. 
 + maxChapterFileSize  (number, required, sample) - Max file size, in bytes, for a chapter in a recording

### Retrieve camera config [GET]
+ Response 200 (application/json)
 + Attributes (Camera Config)

### Modify camera config [PUT]
+ Attributes (object)
 + maxChapterDuration: 180 (number, optional, sample) - set chapter duration to 180 seconds
 + profile: slowMotion_1728sq_60fps (string, optional, sample) - Use a profile with 60FPS encoded frame-rate for a slow motion effect

+ Request (application/json)

+ Response 200 (application/json)
 + Attributes (object)
        + profile: slowMotion_1728sq_60fps (string, required, sample)
        + maxChapterDuration: 180 (number, required, sample)
        + maxChapterFileSize (number, required, sample)

### Reset camera config [DELETE]
+ Response 200 (application/json)
 + Attributes (Camera Config)

## Camera Media Profile Collection [/360fly/camera/profiles]

* Note: Profiles endpoint only available on Firefly (version 1.5) cameras.

+ Attributes (object)
 + proMode_2880sq_30fps (Camera Media Profile, required) - Uses recording format for full resolution recording at 30fps
 + standard_2880sq_24fps (object, required, default) - Uses recording format for full resolution at 24 fps. Allows bandwidth for liveview
        + recordingFormat: fullRes24 (string, required)
        + audioFormat: 48KAAC (string, required)
        + sensordataFormat: mode30fps (string, required)
        + liveviewFormat: 1440sq15 (string, required)
        + projection: radial (string, required)
        + frameDuration: 24 (string, required)
 + extended_2880sq_24fps (object, required) - full resolution at 24 fps w/liveview disabled for extended battery life
        + recordingFormat: fullRes24 (string, required)
        + audioFormat: 48KAAC (string, required)
        + sensordataFormat: mode30fps (string, required)
        + liveviewFormat (string, required, nullable)
        + projection: radial (string, required)
        + frameDuration: 24 (string, required)
 + frontFacing_1440p_30fps (object, required) - 1440p at 30 fps in front facing mode
        + recordingFormat: 1440p30 (string, required)
        + audioFormat: 48KAAC (string, required)
        + sensordataFormat: mode30fps (string, required)
        + liveviewFormat: 1080p15 (string, required)
        + projection: planar (string, required)
        + frameDuration: 30 (string, required)
 + slowMotion_1728sq_60fps (object, required) -  60 fps encoded frame rate for slow motion recording
        + recordingFormat: 1728sq60 (string, required)
        + audioFormat (string, required)
        + sensordataFormat: mode60fps (string, required)
        + liveviewFormat: 1440sq15 (string, required)
        + projection: radial (string, required)
        + frameDuration: 30 (string, required)
 + timeLapse_2880sq_2fps (object, required) - Uses recording format for full resolution at 2 fps. Suitable for time lapse recording where each frame represents a half second interval
        + recordingFormat: 2880sq2 (string, required)
        + audioFormat (string, required, nullable)
        + sensordataFormat: mode2fps (string, required)
        + liveviewFormat: 1440sq15 (string, required)
        + projection: radial (string, required)
        + frameDuration: 30 (string, required)
 + timeLapse_2880sq_1fps (object, required) - Uses recording format for full resolution at 1 fps. Suitable for time lapse recording where each frame represents a 1 second interval
        + recordingFormat: 2880sq1 (string, required)
        + audioFormat (string, required, nullable)
        + sensordataFormat: mode1fps (string, required)
        + liveviewFormat: 1440sq15 (string, required)
        + projection: radial (string, required)
        + frameDuration: 30 (string, required)
 + timeLapse_2880sq_2sec (object, required) - Suitable for time lapse recording where each frame represents a 2 second interval
        + recordingFormat: 2880sq2sec (string, required)
        + audioFormat (string, required, nullable)
        + sensordataFormat: mode2sec (string, required)
        + liveviewFormat: 1440sq15 (string, required)
        + projection: radial (string, required)
        + frameDuration: 30 (string, required)
 + timeLapse_2880sq_5sec (object, required) - Suitable for time lapse recording where each frame represents a 5 second interval
        + recordingFormat: 2880sq5sec (string, required)
        + audioFormat (string, required, nullable)
        + sensordataFormat: mode5sec (string, required)
        + liveviewFormat: 1440sq15 (string, required)
        + projection: radial (string, required)
        + frameDuration: 30 (string, required)
 + timeLapse_2880sq_10sec (object, required) - Suitable for time lapse recording where each frame represents a 10 second interval
        + recordingFormat: 2880sq10sec (string, required)
        + audioFormat (string, required, nullable)
        + sensordataFormat: mode10sec (string, required)
        + liveviewFormat: 1440sq15 (string, required)
        + projection: radial (string, required)
        + frameDuration: 30 (string, required)
 + timeLapse_2880sq_30sec (object, required) - Suitable for time lapse recording where each frame represents a 30 second interval
        + recordingFormat: 2880sq30sec (string, required)
        + audioFormat (string, required, nullable)
        + sensordataFormat: mode30sec (string, required)
        + liveviewFormat: 1440sq15 (string, required)
        + projection: radial (string, required)
        + frameDuration: 30 (string, required)
 + timeLapse_2880sq_60sec (object, required) - Suitable for time lapse recording where each frame represents a 60 second interval
        + recordingFormat: 2880sq60sec (string, required)
        + audioFormat (string, required, nullable)
        + sensordataFormat: mode60sec (string, required)
        + liveviewFormat: 1440sq15 (string, required)
        + projection: radial (string, required)
        + frameDuration: 30 (string, required)

### List all media profiles [GET]
+ Response 200 (application/json)
 + Attributes (Camera Media Profile Collection)

## Camera Media Profile [/360fly/camera/profiles/{name}]

Describes capture/encoding formats for recording, audio, sensordata, liveview. Also specifices the projection data embedded into media, and the frame playback duration for recordings.

+ Attributes (object)
 + recordingFormat: fullRes30 (string, required) - format of recorded video. See /camera/formats/video
 + audioFormat: 48KAAC (string, required) - format of encoded audio. See /camera/formats/audio
 + sensordataFormat: mode30fps (string, required) - format of sensor data for recordings and (future version) liveview stream. See /camera/formats/sensordata
 + liveviewFormat (string, required, nullable) - format of liveview video stream. See /camera/formats/video
 + projection: radial (string, required, default) - name of projection metadata embedded in recordings
 + frameDuration: 30 (string, required, default) - frame playback duration of recordings, represented as the denominator e.g. 30 implies 1/30seconds
 
+ Parameters
 + name (required, string, `proMode_2880sq_30fps`) the relevant profile
 
### Retrieve media profile details [GET]
+ Response 200 (application/json)
 + Attributes (Camera Media Profile)

## Camera Formats Collection [/360fly/camera/formats]

The available media and sensordata formats. The various formats are used to compose a profile (see `/camera/profiles`). The formats are essentially configurations for underlying media/data encoder and capture applications.

* Note: Formats endpoint only available on Firefly (version 1.5) cameras.

* Both recording and liveview use video formats 

+ Attributes (object)
 + video (Camera Video Formats Collection, required) - list of available video formats
 + audio (Camera Audio Formats Collection, required) - list of available audio formats
 + sensordata (Camera Sensordata Formats Collection, required) - list of available meta data formats

### List all camera formats [GET]
+ Response 200 (application/json)
 + Attributes (Camera Formats Collection)

## Camera Video Formats Collection [/360fly/camera/formats/video]

+ Attributes (object)
 + fullRes30 (Camera Video Format, required, default) - Default recording video format
 + fullRes24 (object, required) - Full-res at 24fps. Gives more encoding bandwidth to liveview than fullRes30
        + resolution: 2880x2880 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 24 (number, required)
        + keyinterval: 24 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 48000000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 752sq15 (object, required) - A low encoding bandwidth liveview format. Yields a large amount of encoding bandwidth to recording.
        + resolution: 752x752 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 15 (number, required)
        + keyinterval: 15 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 2000000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 1728sq15 (object, required) - Alternative liveview format
        + resolution: 1728x1728 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 15 (number, required)
        + keyinterval: 15 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 11000000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 1440sq15 (object, required) - Alternative liveview format
        + resolution: 1440x1440 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 15 (number, required)
        + keyinterval: 15 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 6000000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 1440p30 (object, required) - a front-facing recording format
        + resolution: 2560x1440 (string, required)
        + resize: crop (string, required)
        + codec: h264 (string, required)
        + framerate: 30 (number, required)
        + keyinterval: 30 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 27000000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 1728sq60 (object, required) - The max resolution recording format at 60fps
        + resolution: 1728x1728 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 60 (number, required)
        + keyinterval: 30 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 60000000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 1440p15 (object, required) - a front-facing liveview format   
        + resolution: 2560x1440
        + resize: crop (string, required)
        + codec: h264 (string, required)
        + framerate: 15 (number, required)
        + keyinterval: 15 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 13000000  (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 1080p15 (object, required) - a front-facing liveview format
        + resolution: 1920x1080
        + resize: crop (string, required)
        + codec: h264 (string, required)
        + framerate: 15 (number, required)
        + keyinterval: 15 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 7000000  (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 1504sq60 (object, required) - a lower resolution 60 fps recording format
        + resolution: 1504x1504 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 60 (number, required)
        + keyinterval: 30 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 33000000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 2880sq1 (object, required) - full resolution at one frame per second
        + resolution: 2880x2880 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 1 (number, required)
        + keyinterval: 1 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 2000000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 2880sq2 (object, required) - full resolution at 2 frames per second
        + resolution: 2880x2880 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 2 (number, required)
        + keyinterval: 2 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 4000000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 2880sq2sec (object, required) - full resolution. Captures every 2 seconds
        + resolution: 2880x2880 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 0.5 (number, required)
        + keyinterval: 1 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 1000000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 2880sq5sec (object, required) - full resolution. Captures every 5 seconds
        + resolution: 2880x2880 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 0.2 (number, required)
        + keyinterval: 1 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 400000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 2880sq10sec (object, required) - full resolution. Captures every 10 seconds
        + resolution: 2880x2880 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: .1 (number, required)
        + keyinterval: 1 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 200000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 2880sq30sec (object, required) - full resolution. Captures every 30 seconds
        + resolution: 2880x2880 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 0.033 (number, required)
        + keyinterval: 1 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 67000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 2880sq60sec (object, required) - full resolution. Captures every 60 seconds
        + resolution: 2880x2880 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 0.0167 (number, required)
        + keyinterval: 1 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 34000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
        
        
### List all video formats [GET]
+ Response 200 (application/json)
 + Attributes (Camera Video Formats Collection)
         
## Camera Video Format [/360fly/camera/formats/video/{name}]

Format of encoded video for recording and liveview

+ Attributes (object)
 + resolution: 2880x2880 (string, required) - resolution of encoded video
 + resize: scale (string, required) - resize method. options: none, scale, crop
 + codec: h264 (string, required)
 + framerate: 30 (number, required) - target framerate of encoded video (FPS)
 + keyinterval: 30 (number, required) - framecount between keyframes
 + ratecontrol: CVBR (string, required) - bit rate control method. options: NONE, VQCB, CQCB, CVBR, ADPT
 + bitrate: 60000000 (number, required) - maximum or target bitrate (depending on ratecontrol)
 + quant: 18 (number, required) - target quantization. Ranges 0~51. Higher yields more compression.
 + maxquant: 23 (number, required) - max quantization
 + minquant: 0 (number, required) - min quantization
 + maxframerate (number, required) - max framerate of encoded video (FPS). min 15 FPS. Only appliapple for relevant rate controls
 + minframerate (number, required) - min framerate of encoded video (FPS). min 15 FPS. Only appliapple for relevant rate controls

+ Parameters
 + name (required, string, `fullRes30`) the relevant video format
 
### Retrieve video format details [GET]

+ Response 200 (application/json)
 + Attributes (Camera Video Format)

## Camera Audio Formats Collection [/360fly/camera/formats/audio]

+ Attributes (object)
 + 48KAAC (object, required) - default audio encoding format
        + bitrate: 6400 (number, required)
        + samplerate: 4800 (number, required)
        + codec: AAC (string, required)

### List all audio formats [GET]
+ Response 200 (application/json)
 + Attributes (Camera Audio Formats Collection)

## Camera Audio Format [/360fly/camera/formats/audio/{name}]

+ Attributes (object)
 + bitrate: 64000 (required, number) - encoded audio bitrate
 + samplerate: 48000 (required, number) - rate audio is sampled
 + codec: AAC (required, string)
 
+ Parameters
 + name (required, string, `48KAAC`) the relevant audio format
 
### Retrieve audio format details [GET]
+ Response 200 (application/json)
 + Attributes (Camera Audio Format)

## Camera Sensordata Formats Collection [/360fly/camera/formats/sensordata]

+ Attributes (object)
 + mode30fps (Camera Sensordata Format, required, default) - default sensor data capture behavior. Captures most sensors at 30fps
 + mode60fps (object, required) - capture most sensors at 60fps
        + accelMode: 2 (number, required)
        + accelRate: 60 (number, required)
        + gyroMode: 1 (number, required)
        + gyroRate: 60 (number, required)
        + magnetoMode: 1 (number, required)
        + magnetoRate: 60 (number, required)
        + gpsRate: 1 (number, required)
 + mode2fps (object, required) - capture most sensors at 2 fps
        + accelMode: 2 (number, required)
        + accelRate: 2 (number, required)
        + gyroMode: 1 (number, required)
        + gyroRate: 2 (number, required)
        + magnetoMode: 1 (number, required)
        + magnetoRate: 2 (number, required)
        + gpsRate: 1 (number, required)
 + mode1fps (object, required) - capture sensors at 1 fps
        + accelMode: 2 (number, required)
        + accelRate: 1 (number, required)
        + gyroMode: 1 (number, required)
        + gyroRate: 1 (number, required)
        + magnetoMode: 1 (number, required)
        + magnetoRate: 1 (number, required)
        + gpsRate: 1 (number, required)
 + mode2sec (object, required) - capture sensor data in 2 second intervals
        + accelMode: 2 (number, required)
        + accelRate: 0.5 (number, required)
        + gyroMode: 1 (number, required)
        + gyroRate: 0.5 (number, required)
        + magnetoMode: 1 (number, required)
        + magnetoRate: 0.5 (number, required)
        + gpsRate: 0.5 (number, required)
 + mode5sec (object, required) - capture sensor data in 5 second intervals
        + accelMode: 2 (number, required)
        + accelRate: 0.2 (number, required)
        + gyroMode: 1 (number, required)
        + gyroRate: 0.2 (number, required)
        + magnetoMode: 1 (number, required)
        + magnetoRate: 0.2 (number, required)
        + gpsRate: 0.2 (number, required)
 + mode10sec (object, required) - capture sensor data in 10 second intervals
        + accelMode: 2 (number, required)
        + accelRate: 0.1 (number, required)
        + gyroMode: 1 (number, required)
        + gyroRate: 0.1 (number, required)
        + magnetoMode: 1 (number, required)
        + magnetoRate: 0.1 (number, required)
        + gpsRate: 0.1 (number, required)
 + mode30sec (object, required) - capture sensor data in 30 second intervals
        + accelMode: 2 (number, required)
        + accelRate: 0.033 (number, required)
        + gyroMode: 1 (number, required)
        + gyroRate: 0.033 (number, required)
        + magnetoMode: 1 (number, required)
        + magnetoRate: 0.033 (number, required)
        + gpsRate: 0.033 (number, required)
 + mode60sec (object, required) - capture sensor data in 60 second intervals
        + accelMode: 2 (number, required)
        + accelRate: 0.0167 (number, required)
        + gyroMode: 1 (number, required)
        + gyroRate: 0.0167 (number, required)
        + magnetoMode: 1 (number, required)
        + magnetoRate: 0.0167 (number, required)
        + gpsRate: 0.0167 (number, required)

### List all sensordata formats [GET]
+ Response 200 (application/json)
 + Attributes (Camera Sensordata Formats Collection)

## Camera Sensordata Format [/360fly/camera/formats/sensordata/{name}]

Format of sensordata. Effectively a configuration for underlying sensors, events, etc.

+ Attributes (object)
 + accelMode: 2 (number, required) -  accelerometer operating mode in g's. In this case: 2g mode
 + accelRate: 30 (number, required) - accelerometer sample rate, in samples per second
 + gyroMode: 1 (number, required) - gyroscope operating mode
 + gyroRate: 30 (number, required) - gyroscope sample rate, in samples per second
 + magnetoMode: 1 (number, required) - magnetometer operating mode
 + magnetoRate: 30 (number, required) - magnetometer sample rate, in samples per second
 + gpsRate: 1 (number, required) - gps sample rate, in samples per second
 
+ Parameters
 + name (required, string, `mode30fps`) the relevant sensordata format
 
### Retrieve sensordata format details [GET]
+ Response 200 (application/json)
 + Attributes (Camera Sensordata Format)

## Recording [/360fly/camera/recording]

* _Supercedes functionality of 1.0 recording endpoint_.
* Supports _both_ **authenticated** and **non-authenticated** requests.
* Device _cannot_ be in UMS mode to perform this action.
* Returns a 204 (No Content) when no recording is active.

Start/stop recording and get current recording status. You can specify a config for a new recording, or if left unspecified, your recording will use config given by `/360fly/camera/config` (Firefly version 1.5 camera only). A `GET` on an inactive recording gives `204`. A successful `POST` returns a `Location` header for the new recording download url (or the url to first chapter, in the case of chaptered recording)

+ Attributes (object)
 + profile: standard_2880sq_24fps (string, optional, default) - The profile for the active recording
 + maxChapterDuration (number, optional, default) - The chapter duration for active recording
 + maxChapterFileSize (number, optional, default) - The chapter file size for active recording
 + hours: 0 (number, required, sample) - duration in hours of active recording
 + minutes: 4 (number, required, sample) - duration in minutes (modulo hours) of active recording
 + seconds: 30 (number, required, sample) - duration in seconds (modulo hours and minutes) of active recording

### Retrieve active recording status [GET]

+ Response 200 (application/json)
 + Attributes (Recording)

+ Response 204

### Start Recording [POST]
Start a recording session.

* The _start recording_ command supports _both_ **authenticated** and **non-authenticated** requests.
* Device _cannot_ be in UMS mode to perform this action.
* Use an "empty body" for simple record triggering (Use a `Content-length: 0` header for an empty request body).

+ Request
 + Header

                        Content-length: 0

+ Response 201 (application/json)
 + Attributes (object)
        + Include Camera Config
        + hours: 0 (number, required, default)
        + minutes: 0 (number, required, default)
        + seconds: 0 (number, required, default)
 + Header

                        Location: /360fly/video/file/100_3FLY/FLY00101.mp4

+ Request (application/json)
 + Attributes (object)
        + profile: slowMotion_1728sq_60fps (string, optional, sample) - request a slow motion profile for this recording, which has a 60 fps encoded frame rate. 
        + maxChapterDuration: 180 (number, optional, sample) - request for recording to chapter on 180 second intervals

+ Response 201 (application/json)
 + Attributes (object)
        + profile: slowMotion_1728sq_60fps (string, required, sample) - recording in slow motion
        + maxChapterDuration: 180 (number, required, sample) - active recording chapters on 180 second intervals
        + maxChapterFileSize (number, required, default)
        + hours: 0 (number, required, default)
        + minutes: 0 (number, required, default)
        + seconds: 0 (number, required, default)
 + Header

                        Location: /360fly/video/file/100_3FLY/FLY00201.mp4

### Stop Recording [DELETE]

Stop the recording session.

* The _stop recording_ command supports _both_ **authenticated** and **non-authenticated** requests.
* Device _cannot_ be in UMS mode to perform this action.
* Additional Information
    * This command _will stop_ a recording that is in progress. 
    * When a recording request exists but is not in progress (i.e. it is slotted to start at a later time), the recording request is cancelled.

+ Response 202
+ Response 204


## Liveview [/360fly/camera/liveview]

Settings for the 360fly `rtsp` stream.

* Supports _both_ **authenticated** and **non-authenticated** requests.

+ Attributes
 + url: rtsp://fly.local/live1.sdp (string, required, sample) - liveview rtsp url
 + projection (Projection, required, default) - the projection data for liveview. This mirrors the projection specified in the current profile. See `/camera/profiles/{name}` for profile details. See `/camera/config` for setting current profile.

### Retrieve liveview settings [GET]
+ Response 200 (application/json)
 + Attributes (Liveview)

##### __Response Data__
Characteristic | Definition | Values
--- | --- | ---
_url_   |   URL address     |   "rtsp:\/\/192.168.2.1\/live1.sdp"


## Photo [/360fly/camera/photo]

Capture a single high-resolution JPEG image, or multiple images (burst).

* Note: Photo endpoint is only available on Firefly (version 1.5) cameras.

+ Attributes (object)
 + count: 1 (number, required, default) - number of photos to take. > 1 implies burst mode

### Take Photo [POST]

* `Location` response header gives url of the captured photo for single shot, or the url of the first photo for burst 
* There should be at least 3 seconds delay between consecutive requests 
* An empty request body takes a single photo

+ Request (application/json)
+ Attributes (object)
 + count: 3 (number, required) - Take a burst of 3 photos

+ Response 201 (application/json)
 + Header

                        Location: /360fly/media/file/100_3FLY/FLY00801.jpg

+ Request (application/json)

+ Response 201 (application/json)
 + Header

                        Location: /360fly/media/file/137_3FLY/FLY34501.jpg

## Triggered Recording [/360fly/camera/trigger]

Configure camera recording to trigger based on motion or audio detection, or the accelerometer.

* Note: Trigger endpoint is only available on Firefly (version 1.5) cameras.

 + Attributes (object)
  + type: accel (string, required, default) - trigger type. Options: [accel, motion, audio]
  + sensitivity: 5 (number, required, default) - sensitivity of the trigger mechanism e.g. audio trigger requires a minimum volume to start recording. Range: 1~10
  + delay: 10 (number, required, sample) - Minimum allowed time, in seconds, between two trigger activations 
  + duration: 6 (number, required, sample) - Duration, in seconds, of triggered recordings
  + buffer: 3 (number, optional, sample) - Size of buffered video, in seconds. If omitted or null, video is not buffered.

### Retrieve trigger [GET]

+ Response 200 (application/json)
 + Attributes (Triggered Recording)

+ Response 204

### Create new trigger [PUT]

* _If a trigger already exists, it will be deleted and replaced_

+ Attributes (object)
 + type: motion (string, required, sample) - trigger recording on motion detect
 + sensitivity: 1 (number, required, sample) - low sensitivity i.e. only detect high motion events
 + delay: 600 (number, required, sample) - Wait at least 10 minutes between consecutive triggered recordings
 + duration: 10 (number, required, sample) - Triggered recordings will be 10 seconds long

+ Request (application/json)

+ Response 201 (application/json)
 + Attributes (object)
        + type: motion (string, required, sample)
        + sensitivity: 1 (number, required, sample)
        + delay: 600 (number, required, sample)
        + duration: 10 (number, required, sample)
        + buffer (number, optional, sample) - No video buffering

### Delete trigger [DELETE]

+ Response 204

## Tuning [/360fly/camera/tuning]

+ Attributes (object)
 + ae_lock: false (boolean, required, default) - auto exposure lock/unlock
 + saturation: 100 (number, required, default) - image saturation. Range 0~200
 + max_iso_sensitivity: 8000 (number, required, default) - image iso (which adjusts gain). Range: 1000~64000
 + awb_lock: false (boolean, required, default) - auto white balance lock/unlock
 + brightness: 100 (number, required, default) - image brightness. Range 0~200
 + ae_compensation: 100 (number, required, default) - compensation for auto exposure. Range: 50~200
 + contrast: 100 (number, required, default) - image contrast. Range 0~100
 + max_shutter: 30 (number, required, default) - max shutter speed. Shows denominator e.g. 30 implies 1/30 seconds.

### Retrieve tuning settings [GET]

Retrieve a list of scene tuning fields, types and associated values/ranges for the 360Fly device.

* Requires **authentication**.
* Refer to the _**Retrieve Tuning Options**_ section for a list of the tuning setpoints.

+ Response 200 (application/json)
 + Attributes (Tuning)

### Modify tuning settings [PUT]

Change the current tuning values used by the 360Fly camera.

* Requires **authentication**.
* The client can change one or more parameters in a single request.
* The response to this command is a JSON object containing the parameter values supplied in the request.
* Out-of-range/Invalid values are ignored.
* Refer to the _**Retrieve Tuning Options**_ section for a list of the tuning setpoints & allowable values.

+ Request (application/json)
 + Attributes (Scene)

+ Response 200 (application/json)
 + Attributes (Scene)


### Retrieve tuning options [OPTIONS]

Retrieve a list of scene tuning fields, types and associated values/ranges for the 360Fly device.

* The _retrieve tuning options_ command requires **authentication**.

##### __Response Data__
Characteristic | Definition |   Parameter   |   Value
--- | --- | --- | ---
_ae_lock_               |   Auto-exposure lock                  |   type    |   boolean
                        |                                       |   default |   0: unlocked
                        |                                       |           |   1: locked
_saturation_            |   Saturation setting                  |   type    |   integer
                        |                                       |   default |   1000
                        |                                       |   min     |   0
                        |                                       |   max     |   200
_max_iso_sensitivity_   |   Maximum ISO sensitivity             |   type    |   integer
                        |                                       |   default |   8000
                        |                                       |   min     |   1000
                        |                                       |   max     |   64000
_awb_lock_              |   Auto-white-balance Lock             |   type    |   boolean
                        |                                       |   default |   0: unlocked
                        |                                       |           |   1: locked
_brightness_            |   Brightness setting                  |   type    |   integer
                        |                                       |   default |   100
                        |                                       |   min     |   0
                        |                                       |   max     |   200
_ae_compensation_       |   Auto-exposure compensation setting  |   type    |   integer
                        |                                       |   default |   100
                        |                                       |   min     |   50
                        |                                       |   max     |   200
_contrast_              |   Contrast setting                    |   type    |   integer
                        |                                       |   default |   100
                        |                                       |   min     |   0
                        |                                       |   max     |   200
_max_shutter_           |   Shutter speed setting               |   type    |   integer
                        |                                       |   default |   100
                        |                                       |   min     |   15

* Note: max_shutter set point only available on Firefly (version 1.5) cameras.

+ Response 200 (application/json)
 + Body     

                        {
                                "ae_lock":{
                                        "default":false,
                                        "type":"boolean"
                                },
                                "saturation":{
                                        "min":0,
                                        "type":"integer",
                                        "default":100,
                                        "max":200
                                },
                                "max_iso_sensitivity":{
                                        "min":1000,
                                        "type":"integer",
                                        "default":8000,
                                        "max":64000
                                },
                                "awb_lock":{
                                        "default":false,
                                        "type":"boolean"
                                },
                                "brightness":{
                                        "min":0,
                                        "type":"integer",
                                        "default":100,
                                        "max":200
                                },
                                "ae_compensation":{
                                        "min":50,
                                        "type":"integer",
                                        "default":100,
                                        "max":200
                                },
                                "contrast":{
                                        "min":0,
                                        "type":"integer",
                                        "default":100,
                                        "max":200
                                },
                                "max_shutter": {
                                        "min":15,
                                        "type":"integer",
                                        "default":30
                                }
                        }

### Reset to default tuning [DELETE]

Reset **all** device tuning parameters to the default state.

* Requires **authentication**.
* The response to this command is a JSON object containing a list of the updated tuning parameters.
* Refer to the _**Retrieve Tuning Options**_ section for a list of the tuning setpoints.

+ Response 200 (application/json)
 + Attributes (Tuning)

## Scenes Collection [/360fly/camera/scenes]

* Note: Scenes endpoint only available on Firefly (version 1.5) cameras.

+ Attributes (object)
 + normal (Tuning, required, default)
 + lowLight (Scene, required)

### Retrieve scenes [GET]
+ Response 200 (application/json)
 + Attributes (Scenes Collection)

## Scene [/360fly/camera/scenes/{name}]

A camera tuning configuration. 

+ Attributes (object)
 + ae_lock: false (boolean, required)
 + saturation: 100 (number, required)
 + max_iso_sensitivity: 6400 (number, required)
 + contrast: 100 (number, required)
 + awb_lock: false (boolean, required)
 + brightness: 100 (number, required)
 + ae_compensation: 100 (number, required)
 + max_shutter: 15 (number, required)

+ Parameters
 + name (required, string, `lowLight`) the relevant scene

### Retrieve scene [GET]
+ Response 200 (application/json)
 + Attributes (Scene)

## Projection [/360fly/camera/projections]
+ Attributes (object)
 + radial (Projection, required, default) - the default fisheye projection
 + planar (object, required) - standard playback
        + type: planar (string, required)

### Retrieve projection information [GET]

Retrieves a JSON-encoded [PanoMeta](https://github.com/EyeSee360/panometa) projection information 
used by the 360Fly device. This information is embedded in the metadata for each mp4 video file generated.

* The _retrieve projection information_ command requires **authentication**.

##### __Response Data__
Characteristic | Definition | Values
--- | --- | ---
_type_          |   Data configuration      |   Radial
_radialMapping_ |   _**???**_               |   Ftheta
_outerAngle_    |   _**???**_               |   120
_centerRadius_  |   _**???**_               |   0.500000 0.500000 0.500000 0.500000
_orientation_   |   _**???**_               |   180
_panMin_        |   _**???**_               |   -180
_panMax_        |   _**???**_               |   -180
_panRange_      |   _**???**_               |   360
_tiltMin_       |   _**???**_               |   -90
_tiltMax_       |   _**???**_               |   -90
_tiltRange_     |   _**???**_               |   180


+ Response 200 (application/json)
 + Attributes (Projection List, required, default)

## Projection [/360fly/camera/projection]

Camera's default projection.

+ Attributes (object)
 + type: radial (string, required, default) - class of projection
 + radialMapping: ftheta (string, optional, default) - name of mapping used to map angle to radius on a radial capture image
 + outerAngle: 120 (number, optional, default) - Half of the vertical field of view. The max of the radialMapping's domain.
 + centerRadius: 0.5 0.5 0.5 0.5 (string, optional, default) - The location and size of radial image in camera's normalized sensor coordinates
 + orientation: 180 (number, optional, default) - Can be a number representing degrees from "camera down" (so 180 means "camera up") or a string of four values representing rotation from "camera down" as a quaternion
 + panMin (number, optional)
 + panMax (number, optional)
 + panRange (number, optional)
 + tiltMin (number, optional)
 + tiltMax (number, optional)
 + tiltRange  (number, optional)

### Set Projection [PUT]

Set/Update the projection information for the 360Fly device.

* This endpoint is used for setting projection at manufacturing. Can only be done once.
* The _set/update projection information_ command requires **authentication**.
* Returns 403 (Forbidden) if the specified parameter(s) are invalid.

##### __Command Parameters__
Characteristic | Definition | Value (Range)
--- | --- | ---
_type_          |   Data configuration      |   Radial
_radialMapping_ |   _**???**_               |   Ftheta
_outerAngle_    |   _**???**_               |   _**???**_
_centerRadius_  |   _**???**_               |   0.0 to 1.0 _(all four fields)_
_orientation_   |   _**???**_               |   _**???**_
_panMin_        |   _**???**_               |   -180 to 180
_panMax_        |   _**???**_               |   -180 to 180
_panRange_      |   _**???**_               |   0 to 360
_tiltMin_       |   _**???**_               |   _**???**_
_tiltMax_       |   _**???**_               |   _**???**_
_tiltRange_     |   _**???**_               |   _**???**_ 

+ Request (application/json)
 + Attributes (Projection)

+ Response 200 (application/json)
 + Attributes (Projection)


# Group File Handling

Manage video data on the 360Fly device.

* Note: All `/360fly/video/file` requests should be mapped to `/360fly/media/file`


## Retrieve Video Metadata - Method 1 [/360fly/video/file{?offset,limit}]

### List Video File Information Command [GET]

Retrieves a list of available video files (and metadata) on the 360Fly device.

* The _list video file information_ command requires **authentication**.
* Device _cannot_ be in UMS mode to retrieve this information.

##### __Command Parameters__
Characteristic | Value (Range)
--- | ---
_offset_    |   0 to (total number videos on 360Fly device)
_limit_     |   0 to (total number videos on 360Fly device)

##### __Response Data__
Characteristic | Definition | Return Value
--- | --- | ---
_type_              |   File type                                           |   "video"
_modified_          |   Time & date of last modification to video (ISO 8601)|   "2016-01-18T09:00:00Z"
_duration_          |   Duration of video (time & scale)                    |   [clip time, timescale]
_fileSize_          |   File size (in bytes)                                |   1234567890
_modification_      |   Timestamp of when file was modified (in seconds)    |   1234567890
_name_              |   Name of video file                                  |   Record_0000001_000.mp4
_id_                |   Document ID of video file                           |   00000000-0000-0000-0000-000000000000
_download_          |   Download URL on the 360Fly device                   |   "\/360fly\/video\/file\/Record_0000001_000.mp4"
_durationSeconds_   |   Duration of video (in seconds)                      |   1234567890
_instanceID_        |   Instance ID of video                                |   00000000-0000-0000-0000-000000000000
_hasduration_       |   Video has a duration                                |   true
                    |   Video has no duration                               |   false
_itemCount_         |   Number of videos on the 360Fly device               |   1
_offset_            |   Offset into video file listing                      |   Min = 0
                    |                                                       |   Max = total number of videos on 360Fly device - 1

+ Parameters

    + offset (optional, integer, `0`) ... Zero-based offset into the list of videos to return.
    + limit (optional, integer, `50`) ... Maximum number of records to return per request.

+ Response 200 (application/json)

    + Body
    
            {
                "items": [
                    {
                        "type": "video"
                        "modified": "2014-05-18T00:09:16Z", 
                        "duration": [
                            12012120, 
                            1000000
                        ], 
                        "fileSize": 21074620, 
                        "modification": 1400371756, 
                        "name": "Record_0000002_000.mp4", 
                        "id": "cc35a69c-db7b-4141-9cd0-e7b11e0e853c", 
                        "download": "/360fly/video/file/Record_0000002_000.mp4", 
                        "durationSeconds": 12.01212, 
                        "instanceID": "36e1aa83-b186-4421-95d1-0029dbe96566", 
                        "hasduration": true, 
                    }
                ]
                "offset" : 0,
                "itemCount": 1
            }

## Retrieve Video Metadata - Method 2 [/360fly/video/meta]
            
### List Video File Information Command [GET]

Retrieves the same _response data_ information as the _**Retrieve Video Metadata - Method 1**_ section, 
but also retrieves a JSON-encoded list of video/image files with metadata without concern for timeout.

* The _list video file information_ command requires **authentication**.
* Device _cannot_ be in UMS mode to retrieve this information.
* Note: returns "itemCount":0 and "offset":0 if no videos present.

##### __Command Parameters__
Characteristic | Format |   Value (Range)
--- | --- | ---
_Range_ |   "Range: files 0-3"  |   0 to (total number videos on 360Fly device)

+ Request

    + Header
    
            Range: files 0-3

+ Response 200


## Retrieve Video Metadata - Method 3 [/360fly/video/meta/{videoFile}]

+ Parameters

    + videoFile (required,string,`Record_0000001_000.mp4`) ... The video file to perform the action on.

### List Specific Video File Information Command [GET]

Retrieves the same _response data_ information as the _**Retrieve Video Metadata - Method 1**_ section.
Only the metadata for the _**specified**_ video file is retrieved.

* The _list specific video file information_ command requires **authentication**.
* Device _cannot_ be in UMS mode to retrieve this information.
* Note: returns 404 (Not Found) if no videos present.

+ Response 200 (application/json)

    + Body
    
            {
                "recording":"/video/file/Record_0000001_000.mp4",
            }

+ Response 404

## Delete Video Files [/360fly/video/file]

### Delete All Video Files Command [DELETE]

Delete all video files, related files and empty DCIM folders on the 360Fly device.

* The _delete all video files_ command requires **authentication**.
* Device _cannot_ be in UMS mode to perform this action.
* Successful file deletion results in a 204 (No Content) response.

+ Response 204

## Video File Retrieval [/360fly/video/file/{videoFile}]

This section provides commands for downloading, renaming or deleting a video file on the 360Fly device.

+ Parameters
    + videoFile (required, string, `Record_0000001_000.mp4`) ... the original video file name

### Download/Rename A Specific Video File Command [GET]

* The _download/rename a specific video file_ command requires **NO authentication**. _Authenticated requests_ **ARE NOT SUPPORTED.**
* Device _cannot_ be in UMS mode to perform this action.
* A single byte-range request is supported per http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35. The ability to request byte ranges is required by this endpoint for progressive downloading.
* The video file is downloaded and stored in user's root directory.

+ Response 200 (application/octet-stream)


## Video Related Files [/360fly/video/related/{videoFile}]

### Locate Files Related To A Specific Video Command [GET]

Retrieve 360Fly device directory path to files related to a specific video.

* The _locate files related to a specific video_ command requires **authentication**.
* Device _cannot_ be in UMS mode to retrieve this information.
* Note: returns 404 (No Content) if the video does not exist.

##### __Response Data__
Characteristic | Definition | Return Value
--- | --- | ---
_recording_ |   Path to the specified video file.   |   "\/360fly\/video\/file\/VideoFile_xxx.mp4"
_thumbnail_ |   Path to the specified video thumbnail file.   |   "\/360fly\/video\/file\/Thumbnail_xxx.mp4"

+ Response 200 (application/json)

    + Body

            {
                "recording":"/video/file/Record_0000001_000.mp4",
                "thumbnail":"/video/file/Thumb_0000001_000.mp4"
            }

+ Response 404

### Delete A Specific Video And Related Files Command [DELETE]

Delete a specific videoa and any related files from the 360Fly device.

* The _delete a specific video and related files_ command requires **authentication**.
* Device _cannot_ be in UMS mode to retrieve this information.
* Successful file deletion results in a 204 (No Content) response.
* Returns a 404 (Not Found) if the video file does not exist.

+ Response 204

+ Response 404

## Video Clips [/360fly/video/clip/{videoFile}{?start,duration,timescale}]

+ Parameters
    + videoFile (required,string) ... The name of the video file to extract from.
    + start (required,integer) ... The start time of the clip to extract from `videoFile`
    + duration (required, integer) ... The duration of the extracted clip       
    + timescale (required, integer) ... The time scale of `start` and `duration`

### Extract And Download A Video Clip Command [GET]

A video clip is a specific segment of a video file with defined starting/ending boundaries. 
This service creates a video clip from a specific video file on the 360Fly device.

* The _extract and download a video clip_ command requires **authentication**.
* Device _cannot_ be in UMS mode to retrieve this information.
* The video clip is downloaded and stored in user's root directory.

##### __Command Parameters__
Characteristic | Definition |   Value (Range)
--- | --- | ---
_start_     |   Number of seconds into a video to begin clipping    |   0 to (length of video in seconds)
_duration_  |   Duration of video clip                              |   0 to (length of video in seconds)
_timescale_ |   Timescale used for sampling                         |  _**???**_

+ Response 200 (application/octet-stream)

+ Response 404 (text/html)

        The requested recording cannot be found.

+ Response 416 (text/html)

        The requested time range is completely out of bounds (beyond end of clip or before start).

+ Response 409  (text/html)

        Recording unavailable e.g. UMS
        
+ Response 500


## Video Thumbnails [/360fly/video/thumbnail/{videoFile}{?time,timescale}]

+ Parameters
    + videoFile (required,string,`my_video.mp4`) ... The video file to generate a thumbnail from
    + time (optional, integer, `495000`) ... The time in `videoFile` from which the thumbnail is generated
    + timescale (optional, integer, `900000`) ... The `timescale` for `time`

### Create And Download A Thumbnail Command [GET]

Returns a thumbnail for a specified recording, clip or image. Depending upon implementation,
a thumbnail may be a JPEG image or a video file containing a single frame.

* The _create and download a thumbnail_ command requires **NO authentication**. _Authenticated requests_ **ARE NOT SUPPORTED.**
* Device _cannot_ be in UMS mode to perform this action.
* The thumbprint file is downloaded and stored in user's root directory.
* Note: returns 404 (No Content) if the original video does not exist.

##### __Command Parameters__
Characteristic | Definition |   Value (Range)
--- | --- | ---
_time_      |   Number of seconds into a video to grab thumbnail image  |   0 to (length of video in seconds)
_timescale_ |   Timescale used for sampling                             |  _**???**_


+ Response 200 (application/octet-stream)

+ Response 404 (text/html)

        The requested recording cannot be found.

+ Response 416 (text/html)

        The requested time range is completely out of bounds (beyond end of clip or before start).

+ Response 409  (text/html)

        Recordings unavailable e.g. UMS
        
+ Response 500


## Media Metadata [/360fly/media/meta/{mediaFilePath}]

* Note: Media endpoint only available in Firefly (version 1.5) cameras.
* New attribute: __sessionCount__ in media metadata. It represents the total number of burst photos or chaptering videos in the same session

+ Parameters
    + mediaFilePath (required, string, `100_3FLY/FLY00201.jpg`)
    
+ Attributes (object)
 + type: photo (string, required) - media file types: video, photo
 + modified: `2014-05-18T00:09:16Z` (string, required) - Time & date of last modification to media file (ISO 8601)
 + duration (array[number]) - [clip time, timescale] of duration
 + fileSize: 123490357 (number, required) - File size (in bytes)
 + modification (number, required) - Timestamp of when file was modified (in seconds)
 + name: 001_2FLY/FLY00101.jpg (string, required) - Name of media file
 + id (string, required) - Document ID of media file
 + download (string, required) - Download URL on the 360Fly device
 + durationSeconds (number, required) - duration in seconds
 + instanceID (string, required) - instance ID of media file
 + hasDuration: true (boolean, optional) - whether its duration is zero or not
 + sessionCount: 1 (number, optional) - the total number of burst photos, or the total number of chaptering videos

### Retrieve Media File Information [GET]

* The _retrieve specific media file information_ command requires **authentication**.
* Device _cannot_ be in UMS mode to retrieve this information.
* Note: returns 404 (Not Found) if no media file present.

+ Response 200 (application/json)
 + Attributes (Media Metadata)
 

## Media File Collection [/360fly/media/file{?type,offset,limit}]

##### __Command Parameters__
Characteristic | Value (Range)
---|---
_type_      |   Media type: video, photo; if not specified, means all types
_offset_    |   0 to (total number videos on 360Fly device)
_limit_     |   0 to (total number videos on 360Fly device)

+ Parameters
    + type (optional, string) ... Media file type: video, photo; if not specified, means all types
    + offset (optional, integer, `0`) ... Zero-based offset into the list of files to return.
    + limit (optional, integer, `50`) ... Maximum number of files to return per request.
 
### Retrieve All Media Files [GET]


+ Response 200
    + Body
    
            {
                "items": [
                    {
                        "type": "video"
                        "modified": "2014-05-18T00:09:16Z", 
                        "duration": [
                            12012120, 
                            1000000
                        ], 
                        "fileSize": 21074620, 
                        "modification": 1400371756, 
                        "name": "100_3FLY/FLY00201.mp4", 
                        "id": "cc35a69c-db7b-4141-9cd0-e7b11e0e853c", 
                        "download": "/360fly/media/file/100_3FLY/FLY00201.mp4", 
                        "durationSeconds": 12.01212, 
                        "instanceID": "36e1aa83-b186-4421-95d1-0029dbe96566", 
                        "hasduration": true, 
                        "sessionCount": 1
                    }
                    {
                        "type": "photo"
                        "modified": "2014-05-18T00:09:19Z", 
                        "fileSize": 1104620, 
                        "modification": 1400371759, 
                        "name": "100_3FLY/FLY00101.jpg", 
                        "id": "cc35a69c-db7b-4141-9cd0-e7b11e0e853c", 
                        "download": "/360fly/media/file/100_3FLY/FLY00101.jpg", 
                        "instanceID": "36e1aa83-b186-4421-95d1-0029dbe96566", 
                        "hasduration": false, 
                        "sessionCount": 1
                    }
                ]
                "offset": 0,
                "itemCount": 2
            }


### Delete All Media Files [DELETE]

Delete all media files, related files and empty DCIM folders on the 360Fly device.

* The _delete all media files_ command requires **authentication**.
* Device _cannot_ be in UMS mode to perform this action.
* Successful file deletion results in a 204 (No Content) response.

+ Response 204


## Related Media File Collection [/360fly/media/related/{mediaFilePath}{?relation}]


##### __Command Parameters__
Characteristic | Format |   Value (Range)
---|---|---
mediaFilePath |   "100_3FLY/FLY00201.jpg"  |  the media file
_relation_  |   ""  |   the relation type: "thumbnail", "session". If not specified, all (default)


+ Parameters
     + mediaFilePath (required, string, `100_3FLY/FLY00201.jpg`) ... Media file
     + relation (optional, string) ... Relation type: thumbnail, session

### Retrieve Related Media Files [GET]
+ Request (application/json)

+ Response 200
    + Body
    
               {
                       "photo": "/360fly/media/file/100_3FLY/FLY00201.jpg", 
                       "thumbnail": "/360fly/media/thumbnail/100_3FLY/FLY00501.jpg",
                       "session": [
                        {
                         "photo": "/360fly/media/file/100_3FLY/FLY00201.jpg", 
                         "thumbnail": "/360fly/media/thumbnail/100_3FLY/FLY00501.jpg"
                        },
                        {
                         "photo": "/360fly/media/file/100_3FLY/FLY00202.jpg", 
                         "thumbnail": "/360fly/media/thumbnail/100_3FLY/FLY00502.jpg"
                        },
                        {
                         "photo": "/360fly/media/file/100_3FLY/FLY00203.jpg", 
                         "thumbnail": "/360fly/media/thumbnail/100_3FLY/FLY00503.jpg"
                        }
                       ],
                       "sessionCount":3
               }


+ Request (application/json)

+ Response 200
    + Body
    
               {
                       "recording": "/360fly/media/file/100_3FLY/FLY00201.mp4", 
                       "thumbnail": "/360fly/media/file/100_3FLY/FLY00201.thm",
                       "session": [
                        {
                         "recording": "/360fly/media/file/100_3FLY/FLY00201.mp4", 
                         "thumbnail": "/360fly/media/file/100_3FLY/FLY00201.thm"
                        },
                        {
                         "recording": "/360fly/media/file/100_3FLY/FLY00202.mp4", 
                         "thumbnail": "/360fly/media/file/100_3FLY/FLY00202.thm"
                        },
                        {
                         "recording": "/360fly/media/file/100_3FLY/FLY00203.mp4", 
                         "thumbnail": "/360fly/media/file/100_3FLY/FLY00203.thm"
                        }
                       ],
                       "sessionCount":3
               }
               

### Delete Related Media Files [DELETE]

Delete media file and all its related files, if relation is not specified or equal to session
Delete media file and only its thumbnail, if relation is specified as thumbnail.

* The _Delete Related Media Files_ command requires **authentication**.
* Device _cannot_ be in UMS mode to perform this action.
* Successful file deletion results in a 204 (No Content) response.

+ Response 204


## Media File Retrieval [/360fly/media/file/{mediaFilePath}]

This section provides commands for downloading a media file on the 360Fly device.

+ Parameters
    + mediaFilePath (required, string, `100_3FLY/FLY00201.mp4`) ... the media file

### Download A Specific Media File Command [GET]

* The _download a specific media file_ command requires **authentication**. This is not the same as in Fly1.0. 
* Device _cannot_ be in UMS mode to perform this action.
* A single byte-range request is supported per http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35. The ability to request byte ranges is required by this endpoint for progressive downloading.
* The media file is downloaded and stored in user's root directory.

+ Response 200 (application/octet-stream)

## Media Thumbnail Retrieval [/360fly/media/thumbnail/{mediaFilePath}{?time,timescale}]

This section provides commands for downloading thumbnail for a media file on the 360Fly device.

+ Parameters
    + mediaFilePath (required, string, `100_3FLY/FLY00201.jpg`) ... the media file
    + time (optional, integer, `495000`) ... valid only for video file. The time in media file from which thumbnail is generated.
    + timescale (optional, integer, `3000`) ... valid only for video file. the timescale for time.

### Create and Retrieve Media Thumbnail [GET]

+ Response 200 (application/octet-stream)


# Group Sensors

## GPS [/360fly/sensors/gps]
 ##### __GPS States__
        Value | State
        ---|---
        0 | GPS Off
        1 | GPS On, no fix
        2 | GPS on and has fix

+ Attributes (object)
 + state: 0 (number, required, default) - state of gps. See table below


### Retrieve gps info [GET]
+ Response 200 (application/json)
 + Attributes (GPS)

### Configure gps [PUT]
+ Request (application/json)
 + Attributes (object)
        + state: 1 (number, optional, sample) - turn gps on

+ Response 200 (application/json)
 + Attributes (object)
        + state: 1 (boolean, required, sample) - gps is now on


# Group Network

#### *Network API is NOT a launch requirement*

## Network Interfaces [/360fly/network/interfaces]

+ Attributes (object)
 + ap (Access Point Interface, required) - configuration for network access point
 + station (Station Interface, required) - configuration for station connection

### Retrieve network interfaces [GET]

+ Response 200 (application/json)
 + Attributes (Network Interfaces)

## Access Point Interface [/360fly/network/interfaces/ap]

* Control the AP network interface. `SSID`, `ipAddr`, and `error` are read-only properties. 
* `SSID` matches the 360fly's name. See `/360fly/id`.
* AP password matches the 360fly's password. See `/360fly/id`.
* `state` can only be set to `1` or `2` via `PUT` request.

 ##### __AP Interface States__
        Value | State | Description
        ---|---|---
        0 | WiFi Off | WiFi module not running
        1 | AP Down | Access Point is not active
        2 | AP Up | Access Point is active
        3 | AP in Configuration | AP is being configured by another process
        128 | AP Error | AP interface is down due to error. See `error` property. 

 ##### __AP Interface Errors__
        Value | Description
        ---|---
        0 | No error
        1 | SSID of AP is invalid and cannot be used
        2 | Password for AP security is invalid and cannot be used

+ Attributes (object)
 + state: 2 (number, required, default) - AP state. See below for table of possible values.
 + SSID: 360fly_ABCD (string, required, sample) - SSID of AP network. READ-ONLY
 + security: WPA2 (string, required, default) - Network security type. Options: [NONE, WEP, WPA, WPA2]
 + ipAddr: 192.168.2.1 (string, required, default) - IP address of camera on the AP network. READ-ONLY
 + frequency: 2.4 (number, required, default) - WiFi AP operating frequency (GHz). Options: [2.4, 5.0]
 + channel (number, required, default) - WiFi AP channel. null indicates channel is chosen automatically. READ-ONLY (configurable in a future version) 
 + error: 0 (number, required, default) - error code. See below for table of values. READ-ONLY

### Retrieve AP details [GET]

+ Response 200 (application/json)
 + Attributes (Access Point Interface)

### Configure AP [PUT]

+ Request (application/json)
+ Attributes (object)
 + state: 1 (number, optional, sample) - Request to shut AP down

+ Response 200 (application/json)
 + Attributes (object)
        + state: 1 (number, required, default)
        + SSID: 360fly_ABCD (string, required, sample)
        + security: WPA2 (string, required, default)
        + ipAddr: 192.168.2.1 (string, required, default)
        + frequency: 2.4 (number, required, default)
        + channel (number, required, default)
        + error: 0 (number, required, default)

### Reset AP to default [DELETE]

+ Response 204

## Station Interface [/360fly/network/interfaces/station]

* Control the station network interface. The `password` property is never returned, but can be used to connect to a secure AP via a `PUT` request. 
* `ipAddr`, `error`, and `RSSI` are read-only properties.
* A connection request is made by setting `"state":2` and specifying `SSID`, `security`, `password`, and `saved` via `PUT`
* If attempting to connect to a saved network (see `/360fly/network/saved`), then `security`, `password`, and `saved` may be omitted from connection request.
* If attempting to connect to a saved network, and the request specifies `password` and/or `security`, these properties will be overwritten in the saved network entry (see `/360fly/network/saved`)
* If attempting to connect to an unsaved network, the `saved` property determines if new network will be saved
* `state` can only be set to `1` or `2` via `PUT` request

 ##### __Station Interface States__
        Value | State | Description
        ---|---|---
        0 | WiFi Off | WiFi module not running
        1 | Station Down | Not connected to station
        2 | Station Connecting | Connection is initiated but not complete
        3 | Station Up | Station connected
        4 | Station in Configuration | Station interface is being configured by another process
        128 | AP Error | AP interface error. See `error` property. 

 ##### __Station Interface Errors__
        Value | Summary | Description
        ---|---|---
        0 | No error
        2 | Disconnected by Server | Previous connection lost
        3 | Connection Timeout | Connection attempt failed, possibly because SSID can't be reached
        4 | Self-Assigned Address | Failed to obtain leased IP address via DHCP
        5 | WEP Auth Required | Incorrect security type supplied. Requires WEP
        6 | WPA Auth Required | Incorrect security type supplied. Requires WPA
        7 | Auth Not Accepted | Incorrect Password

+ Attributes (object)
 + state: 1 (number, required, default) - Station interface state. See below table of possible values.
 + SSID (string, required, default) - SSID of the connected network. null when not connected.
 + security (string, required, default) - Security type of connected network. null when not connected. Options: [NONE, WEP, WPA, WPA2, null]
 + password (string, required, default) - Password for connected network. null when not connected. password is never returned
 + saved (boolean, required, default) - Connected network is or isn't a saved network (See /360fly/network/saved). null when not connected
 + ipAddr (string, required, default) - IP address of camera on the connected station network. null when not connected. READ-ONLY
 + RSSI (number, required, default) - RSSI of network connection (measure of signal strength) in dBm + 127. null when not connected. READ-ONLY
 + error: 0 (number, required, default) - error code. See below for table of values. READ-ONLY

### Retrieve Station Interface details [GET]

+ Response 200 (application/json)
+ Attributes (object)
 + state: 1 (number, required, default)
 + SSID (string, required, default)
 + security (string, required, default)
 + saved (boolean, required, default)
 + ipAddr (string, required, default)
 + RSSI (number, required, default)
 + error: 0 (number, required, default)

### Connect/disconnect network [PUT]

+ Attributes (object)
 + state: 2 (number, optional, sample) - connect to station
 + SSID: officeNet (string, optional, sample) - connect to network with SSID officeNet
 + security: WPA2 (string, optional, sample) - security type of officeNet
 + password: passphrase54321 (string, optional, sample) - password for officeNet
 + saved: true (boolean, optional, default) - save officeNet. See /360fly/network/saved
+ Request (application/json)

+ Response 200 (application/json)
 + Attributes (object)
        + state: 2 (number, required, sample)
        + SSID: officeNet (string, required, sample)
        + security: WPA2 (string, required, sample)
        + saved: true (boolean, required, sample)
        + ipAddr (string, required, default) - have not gotten IP address lease yet
        + RSSI: 73 (number, required, sample)
        + error: 0 (number, required, default)

### Disconnect from Station [DELETE]

Reset Station Interface to default values

+ Response 204

## Network Scan [/360fly/network/scan{?limit}]

 ##### __Scan Results Entry__
        Value | Description
        ---|---
        SSID | SSID of found network
        security | security type of found network. Options: [WPA, WPA2, WEP, NONE]
        saved | credentials of found network are saved on your 360fly
        RSSI | signal strength of found network, in dBm + 127

Scan for WiFi networks. Results are returned in order of signal strength (RSSI). See table above for description of a scan results entry

+ Attributes (array)
 + entry0 (object, optional, sample)
        + SSID: firstNetworkSSID (string, required, sample)
        + security: WPA2 (string, required, sample)
        + saved: true (boolean, required, sample)
        + RSSI: 71 (number, required, sample)
 + entry1 (object, optional, sample)
        + SSID: secondNetworkSSID (string, required, sample)
        + security: WEP (string, required, sample)
        + saved: false (boolean, required, sample)
        + RSSI: 68 (number, required, sample)

+ Parameters
 + limit (optional, number) ... Maximum number of results

### Retrieve scan results [GET]

+ Response 200 (application/json)
 + Attributes (Network Scan)

## Saved Networks [/360fly/network/saved{?offset,limit}]

* Saved networks are returned in order of their connection priority

+ Attributes (array)
 + entry0 (object, optional, sample)
        + id: 0 (number, required, sample)
        + SSID: firstNetworkSSID (string, required, sample)
        + security: WPA2 (string, required, sample)
        + connected: false (boolean, required, sample)
 + entry1 (Saved Network, optional, sample)

+ Parameters
 + offset (optional, number) ... results array returned starting at `offset`
 + limit (optional, number) ... maximum number of returned results

### Retrieve saved networks [GET]
+ Response 200 (application/json)
 + Attributes (Saved Networks)

### Forget all networks [DELETE]
+ Response 204

## Saved Network [/360fly/network/saved/{id}]

+ Attributes (object)
 + id: 1 (number, required, sample) - index of entry in saved networks array. Also indicates connection priority
 + SSID: someSavedNetwork (string, required, sample) - SSID of this saved network
 + security: NONE (string, required, sample) - security of this saved network
 + connected: false (boolean, required, sample) - indicates 360fly is currently connected to this network

+ Parameters
 + id (required, number, `1`) ... id of the saved network 

### Retrieve saved network [GET]
+ Response 200 (application/json)
 + Attributes (Saved Network)

### Forget network [DELETE]

+ Response 204

# Group Bluetooth

## Bluetooth Bonded Devices Collection [/360fly/bluetooth/bonds{?name}]

+ Attributes (array)
 + entry0 (Bluetooth Bonded Device, optional, sample)
 + entry1 (object, optional, sample)
        + id: 1 (number, required, sample)
        + name: BTHeadSet1 (string, required, sample)
        + RSSI: 0 (number, required, sample)

+ Parameters
 + name (string, optional) ... filter response by `name` property

### Retrieve bonded devices [GET]

* devices are ordered by connection priority

+ Response 200 (application/json)
 + Attributes (Bluetooth Bonded Devices Collection)

### Forget all bonded devices [DELETE]

+ Response 204

## Bluetooth Bonded Device [/360fly/bluetooth/bonds/{id}]

+ Attributes (object)
 + id: 0 (number, required, sample) - index of device in array of Bonded Devices (see /360fly/bluetooth/bonds)
 + name: BTHeadSet0 (string, required, sample) - device name
 + RSSI: 50 (number, required, sample) - signal strength, measured in dBm + 127

+ Parameters
 + id (required, number, `0`) ... index of device in array of bonded devices (see /360fly/bluetooth/bonds)

### Retrieve bonded device [GET]

+ Response 200 (application/json)
 + Attributes (Bluetooth Bonded Device)

### Forget bonded device [DELETE]

+ Response 204
 
## Bluetooth Connected Devices Collection [/360fly/bluetooth/connections]

+ Attributes (array)
 + entry0 (Bluetooth Connected Device, optional, sample)

### Retrieve connected devices [GET]

* For now, only one device can be connected at a time

+ Response 200 (application/json)
 + Attributes (Bluetooth Connected Devices Collection)

### Disconnect all devices [DELETE]
+ Response 204

## Bluetooth Connected Device [/360fly/bluetooth/connections/{id}]

+ Attributes (object)
 + id: 0 (number, required, sample) - index of device in connected devices array (see /360fly/bluetooth/connections)
 + name: myBTDevice (string, required, sample) - name of connected device
 + bonded: false (boolean, required, sample) - is device bonded to 360fly
 + RSSI: 59 (number, required, sample) - signal strength, measured in dBm + 127

+ Parameters
 + id (required, number, `0`) ... index of device in array of connected devices (see `/360fly/bluetooth/connections`)

### Retrieve connected device [GET]

+ Response 200 (application/json)
 + Attributes (Bluetooth Connected Device)

### Pair/Bond or unpair/unbond with connected device [PUT]

* Should always specify `bonded`, and optionally `pin` if pairing/bonding requires a security pin. All other properties are read-only.
* Pairing also means "bonding with connected device"
* Successful pair/bond requests return a `Location` header with url to new bond in the bonds collection (see `/360fly/bluetooth/bonds`)
* If the bonds collection is at maximum, then the oldest bond is replaced by the new bond
* Unsuccessful pairing requests will respond with an `error` property. See table below.
 ##### __Error Codes__
        Value | Description
        ---|---
        0 | No Error
        1 | Incorrect Pin
        2 | Pairing attempt timed out (Device may no longer be in range)

+ Request (application/json)
 + Attributes (object)
        + bonded: true (boolean, required, sample) - attempt to pair with connected device
        + pin: 1234 (number, optional, sample) - security pin for connected device

+ Response 200 (application/json)
 + Attributes (object)
        + id: 0 (number, required, sample)
        + name: BTHeadSet0 (string, required, sample)
        + bonded: true (boolean, required, sample)
        + RSSI: 56 (number, required, sample)
 + Header

                        Location: https://${HOST}/360fly/bluetooth/bonds/2

+ Request (application/json)
 + Attributes (object)
        + bonded: false (boolean, required, sample) - attempt to unpair/unbond the connected device

+ Response 200 (application/json)
 + Attributes (Bluetooth Connected Device)

+ Request (application/json)
 + Attributes (object)
        + bonded: true (boolean, required, sample) - attempt to pair/bond with connected device
        + pin: 4321 (number, optional, sample) - incorrect security pin for connected device

+ Response 401 (application/json)
 + Attributes (object)
        + error: 1 (number, required, sample)

+ Request (application/json)
 + Attributes (object)
        + bonded: true (boolean, required, sample) - attempt to pair/bond, but no pin being supplied

+ Response 401 (application/json)
 + Attributes (object)
        + error: 1 (number, required, sample)


### Disconnect device [DELETE]

+ Response 204

## Bluetooth Scan Results Collection [/360fly/bluetooth/scan{?limit}]

Scan for advertising peripherals
* Results are ordered by RSSI (signal strength)
* Only supported remote audio peripherals are shown

+ Attributes (array)
 + entry0 (object)
        + id: 0 (number, required, sample)
        + name: BTHeadSet0 (string, required, sample)
        + connected: false (boolean, required, sample)
        + bonded: true (boolean, required, sample)
        + RSSI: 80 (number, required, sample)
 + entry1 (Bluetooth Scan Result)

+ Parameters
 + limit (optional, number) ... Maximum number of results

### Retrieve scan results [GET]
+ Response 200 (application/json)
 + Attributes (Bluetooth Scan Results Collection)

## Bluetooth Scan Result [/360fly/bluetooth/scan/{id}]

+ Attributes (object)
 + id: 1 (number, required, sample) - index of peripheral in scan results (see /360fly/bluetooth/scan)
 + name: BTHeadSet3 (string, required, sample) - name of advertising peripheral
 + connected: false (boolean, required, sample) - is peripheral currently connected
 + bonded: false (boolean, required, sample) - is peripheral a bonded device
 + RSSI: 60 (number, required, sample) - signal strength of advertising peripheral, in dBm + 127

+ Parameters
 + id (required, number, `1`) ... index of peripheral in scan results (see `/360fly/bluetooth/scan`)

### Retrieve scan result [GET]

+ Response 200 (application/json)
 + Attributes (Bluetooth Scan Result)

### Connect/disconnect device [PUT]
* Should always specify `connected`, and optionally specify `pin`.  All other properties are read-only 
* If number of connections is at maximum, the oldest connection will be dropped so this new connection can be made
* Successful connections return a `Location` header with the newly connected device url
* If possible, 360fly will attempt to pair/bond with the newly connected device. Newly paired/bonded peripherals are added to bonds collection (see `/360fly/bluetooth/bonds`). 
* Some peripherals require a `pin` for pairing/bonding. Previously bonded peripherals can pair without specifying `pin`.
* If the bonds collection is at maximum, then the oldest bond is replaced by the new bond
* Failed requests will return an error code. See table below

 ##### __Error Codes__
        Value | Description
        ---|---
        0 | No Error
        1 | Connection attempt timed out (Device may no longer be in range)

+ Request (application/json)
 + Attributes (object)
        + connected: true (boolean, required, sample)
        + pin: 1234 (number, optional, sample) - correct pairing pin

+ Response 200 (application/json)
 + Attributes (object)
        + id: 1 (number, required, sample)
        + name: BTHeadSet3 (string, required, sample)
        + connected: true (boolean, required, sample)
        + bonded: true (boolean, required, sample) - the successful connection also paired/bonded
        + RSSI: 67 (number, required, sample)
 + Header

                        Location: https://${HOST}/360fly/bluetooth/connections/0

+ Request (application/json)
 + Attributes (object)
        + connected: true (boolean, required, sample)
        + pin: 4321 (number, optional, sample) - incorrect pairing pin

+ Response 200 (application/json)
 + Attributes (object)
        + id: 1 (number, required, sample)
        + name: BTHeadSet3 (string, required, sample)
        + connected: true (boolean, required, sample)
        + bonded: false (boolean, required, sample) - pairing/bonding was unsuccessful due to incorrect pin
        + RSSI: 67 (number, required, sample)
 + Header

                        Location: https://${HOST}/360fly/bluetooth/connections/0

+ Request (application/json)
 + Attributes (object)
        + connected: false (boolean, optional, sample) - disconnect

+ Response 200 (application/json)
 + Attributes (Bluetooth Scan Result)

+ Request (application/json)
 + Attributes (object)
        + connected: true (boolean, optional, sample) - connect, but do not specify security pin

+ Response 200 (application/json)
 + Attributes (object)
        + id: 1 (number, required, sample)
        + name: BTHeadSet3 (string, required, sample)
        + connected: true (boolean, required, sample)
        + bonded: false (boolean, required, sample) - pairing/bonding didn't happen since no security pin was supplied
        + RSSI: 67 (number, required, sample)
 + Header

                        Location: https://${HOST}/360fly/bluetooth/connections/0
