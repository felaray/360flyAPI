MAT: 1A

# 360fly ReST API for Thunderdome

This API document outlines additions or modifications to the base 360fly REST specification that are required to
achieve full functionality of version 1.5 (Thunderdome).

# Global Response Headers

These response headers are to be included with _every_ response

+ Headers

                        X-360fly-API-Version: v0.8.0


# Group General Device Control and Status

* _Extends 1.0 ReST Spec_

## Identity [/360fly/id]

* The `password` property is never returned, but can be modified via a `PUT` request.
* Successful `PUT` requests will cause all WiFi AP clients to disconnect since the AP SSID or password will change

+ Attributes (object)
 + name: 360fly (string, required, sample) - Name of 360fly. This is the name presented to users and the AP SSID
 + password: 00000000 (string, required, default) - Password of 360fly. Used for http authentication and WiFi AP security. password is never returned

### Retrieve identity [GET]

+ Response 200 (application/json)
+ Attributes (object)
 + name: 360fly (string, required, sample)

### Change identity [PUT]
+ Attributes (object)
 + name: my360fly (string, optional, sample) - change the 360fly's name
 + password: myPassPhrase (string, optional, sample) - change 360fly's password

+ Request (application/json)

+ Response 200 (application/json)
+ Attributes (object)
 + name: my360fly (string, required, sample)


## USB [/360fly/usb]

+ Attributes (object)
 + mode: 1 (number, required, default) - USB mode: 0 - disabled; 1 - mass storage mode; 2 - USB video streaming
 + persistentMode: 1 (number, required) - default USB mode after reboot

### Retrieve USB Configuration [GET]

+ Response 200 (application/json)
 + Attributes (USB)

### Modify USB Configuration [PUT]

+ Request (application/json)
 + Attributes (object)
        + mode: 2 (number, required) - Enabling USB video streaming

+ Response 200 (application/json)
 + Attributes (object)
        + mode: 2 (number, required)
        + persistentMode: 1 (number, required)

+ Request (application/json)
 + Attributes (object)
        + persistentMode: 2 (number, required) - USB video streaming mode will persist after reboot

+ Response 200 (application/json)
 + Attributes (object)
        + mode: 1 (number, required)
        + persistentMode: 2 (number, required)

### Reset USB Configuration to default [DELETE]
+ Response 204
 + Attributes (USB)

# Group Camera

Configure 360fly media capture

## Camera Config [/360fly/camera/config]

Operating mode of the camera

+ Attributes (object)
 + profile: standard_2880sq_24fps (string, required, default) - Current camera profile (see /camera/profiles). Determines media formats for recorded and liveview video, audio, sensordata, and metadata 
 + maxChapterDuration (number, required, sample) - Max duration, in seconds, for a chapter in a recording. 
 + maxChapterFileSize  (number, required, sample) - Max file size, in bytes, for a chapter in a recording

### Retrieve camera config [GET]
+ Response 200 (application/json)
 + Attributes (Camera Config)

### Modify camera config [PUT]
+ Attributes (object)
 + maxChapterDuration: 180 (number, optional, sample) - set chapter duration to 180 seconds
 + profile: slowMotion_1728sq_60fps (string, optional, sample) - Use a profile with 60FPS encoded frame-rate for a slow motion effect

+ Request (application/json)

+ Response 200 (application/json)
 + Attributes (object)
        + profile: slowMotion_1728sq_60fps (string, required, sample)
        + maxChapterDuration: 180 (number, required, sample)
        + maxChapterFileSize (number, required, sample)

### Reset camera config [DELETE]
+ Response 200 (application/json)
 + Attributes (Camera Config)

## Camera Media Profile Collection [/360fly/camera/profiles]

+ Attributes (object)
 + proMode_2880sq_30fps (Camera Media Profile, required) - Uses recording format for full resolution recording at 30fps
 + standard_2880sq_24fps (object, required, default) - Uses recording format for full resolution at 24 fps. Allows bandwidth for liveview
        + recordingFormat: fullRes24 (string, required)
        + audioFormat: 48KAAC (string, required)
        + sensordataFormat: mode30fps (string, required)
        + liveviewFormat: 1728sq15 (string, required)
        + projection: radial (string, required)
        + frameDuration: 24 (string, required)
 + frontFacing_1440p_30fps (object, required) - 1440p at 30 fps in front facing mode
        + recordingFormat: 1440p30 (string, required)
        + audioFormat: 48KAAC (string, required)
        + sensordataFormat: mode30fps (string, required)
        + liveviewFormat: 1440p15 (string, required)
        + projection: planar (string, required)
        + frameDuration: 30 (string, required)
 + slowMotion_1728sq_60fps (object, required) -  60 fps encoded frame rate for slow motion recording
        + recordingFormat: 1728sq60 (string, required)
        + audioFormat (string, required)
        + sensordataFormat: mode60fps (string, required)
        + liveviewFormat: 752sq15 (string, required)
        + projection: radial (string, required)
        + frameDuration: 30 (string, required)
 + timeLapse_2880sq_2fps (object, required) - Uses recording format for full resolution at 2 fps. Suitable for time lapse recording where each frame represents a half second interval
        + recordingFormat: 2880sq2 (string, required)
        + audioFormat (string, required)
        + sensordataFormat: mode2fps (string, required)
        + liveviewFormat: 752sq15 (string, required)
        + projection: radial (string, required)
        + frameDuration: 30 (string, required)
 + timeLapse_2880sq_1fps (object, required) - Uses recording format for full resolution at 1 fps. Suitable for time lapse recording where each frame represents a 1 second interval
        + recordingFormat: 2880sq1 (string, required)
        + audioFormat (string, required)
        + sensordataFormat: mode1fps (string, required)
        + liveviewFormat: 752sq15 (string, required)
        + projection: radial (string, required)
        + frameDuration: 30 (string, required)
 + timeLapse_2880sq_2sec (object, required) - Suitable for time lapse recording where each frame represents a 2 second interval
        + recordingFormat: 2880sq2sec (string, required)
        + audioFormat (string, required)
        + sensordataFormat: mode2sec (string, required)
        + liveviewFormat: 752sq15 (string, required)
        + projection: radial (string, required)
        + frameDuration: 30 (string, required)
 + timeLapse_2880sq_5sec (object, required) - Suitable for time lapse recording where each frame represents a 5 second interval
        + recordingFormat: 2880sq5sec (string, required)
        + audioFormat (string, required)
        + sensordataFormat: mode5sec (string, required)
        + liveviewFormat: 752sq15 (string, required)
        + projection: radial (string, required)
        + frameDuration: 30 (string, required)
 + timeLapse_2880sq_10sec (object, required) - Suitable for time lapse recording where each frame represents a 10 second interval
        + recordingFormat: 2880sq10sec (string, required)
        + audioFormat (string, required)
        + sensordataFormat: mode10sec (string, required)
        + liveviewFormat: 752sq15 (string, required)
        + projection: radial (string, required)
        + frameDuration: 30 (string, required)
 + timeLapse_2880sq_30sec (object, required) - Suitable for time lapse recording where each frame represents a 30 second interval
        + recordingFormat: 2880sq30sec (string, required)
        + audioFormat (string, required)
        + sensordataFormat: mode30sec (string, required)
        + liveviewFormat: 752sq15 (string, required)
        + projection: radial (string, required)
        + frameDuration: 30 (string, required)
 + timeLapse_2880sq_60sec (object, required) - Suitable for time lapse recording where each frame represents a 60 second interval
        + recordingFormat: 2880sq60sec (string, required)
        + audioFormat (string, required)
        + sensordataFormat: mode60sec (string, required)
        + liveviewFormat: 752sq15 (string, required)
        + projection: radial (string, required)
        + frameDuration: 30 (string, required)

### List all media profiles [GET]
+ Response 200 (application/json)
 + Attributes (Camera Media Profile Collection)

## Camera Media Profile [/360fly/camera/profiles/{name}]

Describes capture/encoding formats for recording, audio, sensordata, liveview. Also specifices the projection data embedded into media, and the frame playback duration for recordings.

+ Attributes (object)
 + recordingFormat: fullRes30 (string, required) - format of recorded video. See /camera/formats/video
 + audioFormat: 48KAAC (string, required) - format of encoded audio. See /camera/formats/audio
 + sensordataFormat: mode30fps (string, required) - format of sensor data for recordings and (future version) liveview stream. See /camera/formats/sensordata
 + liveviewFormat: 752sq15 (string, required) - format of liveview video stream. See /camera/formats/video
 + projection: radial (string, required, default) - name of projection metadata embedded in recordings
 + frameDuration: 30 (string, required, default) - frame playback duration of recordings, represented as the denominator e.g. 30 implies 1/30seconds
 
+ Parameters
 + name (required, string, `proMode_2880sq_30fps`) the relevant profile
 
### Retrieve media profile details [GET]
+ Response 200 (application/json)
 + Attributes (Camera Media Profile)

## Camera Formats Collection [/360fly/camera/formats]

The available media and sensordata formats. The various formats are used to compose a profile (see `/camera/profiles`). The formats are essentially configurations for underlying media/data encoder and capture applications.

* Both recording and liveview use video formats 

+ Attributes (object)
 + video (Camera Video Formats Collection, required) - list of available video formats
 + audio (Camera Audio Formats Collection, required) - list of available audio formats
 + sensordata (Camera Sensordata Formats Collection, required) - list of available meta data formats

### List all camera formats [GET]
+ Response 200 (application/json)
 + Attributes (Camera Formats Collection)

## Camera Video Formats Collection [/360fly/camera/formats/video]

+ Attributes (object)
 + fullRes30 (Camera Video Format, required, default) - Default recording video format
 + fullRes24 (object, required) - Full-res at 24fps. Gives more encoding bandwidth to liveview than fullRes30
        + resolution: 2880x2880 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 24 (number, required)
        + keyinterval: 24 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 48000000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 752sq15 (object, required) - A low encoding bandwidth liveview format. Yields a large amount of encoding bandwidth to recording.
        + resolution: 752x752 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 15 (number, required)
        + keyinterval: 15 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 2000000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 1728sq15 (object, required) - Alternative liveview format
        + resolution: 1728x1728 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 15 (number, required)
        + keyinterval: 15 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 11000000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 1440p30 (object, required) - a front-facing recording format
        + resolution: 2560x1440 (string, required)
        + resize: crop (string, required)
        + codec: h264 (string, required)
        + framerate: 30 (number, required)
        + keyinterval: 30 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 27000000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 1728sq60 (object, required) - The max resolution recording format at 60fps
        + resolution: 1728x1728 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 60 (number, required)
        + keyinterval: 30 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 60000000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 1440p15 (object, required) - a front-facing liveview format   
        + resolution: 2560x1440
        + resize: crop (string, required)
        + codec: h264 (string, required)
        + framerate: 15 (number, required)
        + keyinterval: 15 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 13000000  (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 1504sq60 (object, required) - a lower resolution 60 fps recording format
        + resolution: 1504x1504 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 60 (number, required)
        + keyinterval: 30 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 33000000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 2880sq1 (object, required) - full resolution at one frame per second
        + resolution: 2880x2880 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 1 (number, required)
        + keyinterval: 1 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 2000000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 2880sq2 (object, required) - full resolution at 2 frames per second
        + resolution: 2880x2880 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 2 (number, required)
        + keyinterval: 2 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 4000000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 2880sq2sec (object, required) - full resolution. Captures every 2 seconds
        + resolution: 2880x2880 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 0.5 (number, required)
        + keyinterval: 1 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 1000000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 2880sq5sec (object, required) - full resolution. Captures every 5 seconds
        + resolution: 2880x2880 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 0.2 (number, required)
        + keyinterval: 1 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 400000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 2880sq10sec (object, required) - full resolution. Captures every 10 seconds
        + resolution: 2880x2880 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: .1 (number, required)
        + keyinterval: 1 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 200000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 2880sq30sec (object, required) - full resolution. Captures every 30 seconds
        + resolution: 2880x2880 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 0.033 (number, required)
        + keyinterval: 1 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 67000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
 + 2880sq60sec (object, required) - full resolution. Captures every 60 seconds
        + resolution: 2880x2880 (string, required)
        + resize: scale (string, required)
        + codec: h264 (string, required)
        + framerate: 0.0167 (number, required)
        + keyinterval: 1 (number, required)
        + ratecontrol: CVBR (string, required)
        + bitrate: 34000 (number, required)
        + quant: 18 (number, required)
        + maxquant: 23 (number, required)
        + minquant: 0 (number, required)
        + maxframerate (number, required)
        + minframerate (number, required)
        
        
### List all video formats [GET]
+ Response 200 (application/json)
 + Attributes (Camera Video Formats Collection)
         
## Camera Video Format [/360fly/camera/formats/video/{name}]

Format of encoded video for recording and liveview

+ Attributes (object)
 + resolution: 2880x2880 (string, required) - resolution of encoded video
 + resize: scale (string, required) - resize method. options: none, scale, crop
 + codec: h264 (string, required)
 + framerate: 30 (number, required) - target framerate of encoded video (FPS)
 + keyinterval: 30 (number, required) - framecount between keyframes
 + ratecontrol: CVBR (string, required) - bit rate control method. options: NONE, VQCB, CQCB, CVBR, ADPT
 + bitrate: 60000000 (number, required) - maximum or target bitrate (depending on ratecontrol)
 + quant: 18 (number, required) - target quantization. Ranges 0~51. Higher yields more compression.
 + maxquant: 23 (number, required) - max quantization
 + minquant: 0 (number, required) - min quantization
 + maxframerate (number, required) - max framerate of encoded video (FPS). min 15 FPS. Only appliapple for relevant rate controls
 + minframerate (number, required) - min framerate of encoded video (FPS). min 15 FPS. Only appliapple for relevant rate controls

+ Parameters
 + name (required, string, `fullRes30`) the relevant video format
 
### Retrieve video format details [GET]

+ Response 200 (application/json)
 + Attributes (Camera Video Format)

## Camera Audio Formats Collection [/360fly/camera/formats/audio]

+ Attributes (object)
 + 48KAAC (object, required) - default audio encoding format
        + bitrate: 6400 (number, required)
        + samplerate: 4800 (number, required)
        + codec: AAC (string, required)

### List all audio formats [GET]
+ Response 200 (application/json)
 + Attributes (Camera Audio Formats Collection)

## Camera Audio Format [/360fly/camera/formats/audio/{name}]

+ Attributes (object)
 + bitrate: 64000 (required, number) - encoded audio bitrate
 + samplerate: 48000 (required, number) - rate audio is sampled
 + codec: AAC (required, string)
 
+ Parameters
 + name (required, string, `48KAAC`) the relevant audio format
 
### Retrieve audio format details [GET]
+ Response 200 (application/json)
 + Attributes (Camera Audio Format)

## Camera Sensordata Formats Collection [/360fly/camera/formats/sensordata]

+ Attributes (object)
 + mode30fps (Camera Sensordata Format, required, default) - default sensor data capture behavior. Captures most sensors at 30fps
 + mode60fps (object, required) - capture most sensors at 60fps
        + accelMode: 2 (number, required)
        + accelRate: 60 (number, required)
        + gyroMode: 1 (number, required)
        + gyroRate: 60 (number, required)
        + magnetoMode: 1 (number, required)
        + magnetoRate: 60 (number, required)
        + gpsRate: 1 (number, required)
 + mode2fps (object, required) - capture most sensors at 2 fps
        + accelMode: 2 (number, required)
        + accelRate: 2 (number, required)
        + gyroMode: 1 (number, required)
        + gyroRate: 2 (number, required)
        + magnetoMode: 1 (number, required)
        + magnetoRate: 2 (number, required)
        + gpsRate: 1 (number, required)
 + mode1fps (object, required) - capture sensors at 1 fps
        + accelMode: 2 (number, required)
        + accelRate: 1 (number, required)
        + gyroMode: 1 (number, required)
        + gyroRate: 1 (number, required)
        + magnetoMode: 1 (number, required)
        + magnetoRate: 1 (number, required)
        + gpsRate: 1 (number, required)
 + mode2sec (object, required) - capture sensor data in 2 second intervals
        + accelMode: 2 (number, required)
        + accelRate: 0.5 (number, required)
        + gyroMode: 1 (number, required)
        + gyroRate: 0.5 (number, required)
        + magnetoMode: 1 (number, required)
        + magnetoRate: 0.5 (number, required)
        + gpsRate: 0.5 (number, required)
 + mode5sec (object, required) - capture sensor data in 5 second intervals
        + accelMode: 2 (number, required)
        + accelRate: 0.2 (number, required)
        + gyroMode: 1 (number, required)
        + gyroRate: 0.2 (number, required)
        + magnetoMode: 1 (number, required)
        + magnetoRate: 0.2 (number, required)
        + gpsRate: 0.2 (number, required)
 + mode10sec (object, required) - capture sensor data in 10 second intervals
        + accelMode: 2 (number, required)
        + accelRate: 0.1 (number, required)
        + gyroMode: 1 (number, required)
        + gyroRate: 0.1 (number, required)
        + magnetoMode: 1 (number, required)
        + magnetoRate: 0.1 (number, required)
        + gpsRate: 0.1 (number, required)
 + mode30sec (object, required) - capture sensor data in 30 second intervals
        + accelMode: 2 (number, required)
        + accelRate: 0.033 (number, required)
        + gyroMode: 1 (number, required)
        + gyroRate: 0.033 (number, required)
        + magnetoMode: 1 (number, required)
        + magnetoRate: 0.033 (number, required)
        + gpsRate: 0.033 (number, required)
 + mode60sec (object, required) - capture sensor data in 60 second intervals
        + accelMode: 2 (number, required)
        + accelRate: 0.0167 (number, required)
        + gyroMode: 1 (number, required)
        + gyroRate: 0.0167 (number, required)
        + magnetoMode: 1 (number, required)
        + magnetoRate: 0.0167 (number, required)
        + gpsRate: 0.0167 (number, required)

### List all sensordata formats [GET]
+ Response 200 (application/json)
 + Attributes (Camera Sensordata Formats Collection)

## Camera Sensordata Format [/360fly/camera/formats/sensordata/{name}]

Format of sensordata. Effectively a configuration for underlying sensors, events, etc.

+ Attributes (object)
 + accelMode: 2 (number, required) -  accelerometer operating mode in g's. In this case: 2g mode
 + accelRate: 30 (number, required) - accelerometer sample rate, in samples per second
 + gyroMode: 1 (number, required) - gyroscope operating mode
 + gyroRate: 30 (number, required) - gyroscope sample rate, in samples per second
 + magnetoMode: 1 (number, required) - magnetometer operating mode
 + magnetoRate: 30 (number, required) - magnetometer sample rate, in samples per second
 + gpsRate: 1 (number, required) - gps sample rate, in samples per second
 
+ Parameters
 + name (required, string, `mode30fps`) the relevant sensordata format
 
### Retrieve sensordata format details [GET]
+ Response 200 (application/json)
 + Attributes (Camera Sensordata Format)

## Recording [/360fly/camera/recording]

* _Supercedes functionality of 1.0 recording endpoint_

Start/stop recording and get current recording status. You can specify a config for a new recording, or if left unspecified, your recording will use config given by `/360fly/camera/config`. A `GET` on an inactive recording gives `204`. A successful `POST` returns a `Location` header for the new recording download url (or the url to first chapter, in the case of chaptered recording)

+ Attributes (object)
 + profile: standard_2880sq_24fps (string, optional, default) - The profile for the active recording
 + maxChapterDuration (number, optional, default) - The chapter duration for active recording
 + maxChapterFileSize (number, optional, default) - The chapter file size for active recording
 + hours: 0 (number, required, sample) - duration in hours of active recording
 + minutes: 4 (number, required, sample) - duration in minutes (modulo hours) of active recording
 + seconds: 30 (number, required, sample) - duration in seconds (modulo hours and minutes) of active recording

### Retrieve active recording status [GET]

+ Response 200 (application/json)
 + Attributes (Recording)

+ Response 204

### Start Recording [POST]

+ Request
 + Header

                        Content-length: 0

+ Response 201 (application/json)
 + Attributes (object)
        + Include Camera Config
        + hours: 0 (number, required, default)
        + minutes: 0 (number, required, default)
        + seconds: 0 (number, required, default)
 + Header

                        Location: /360fly/video/file/100_3FLY/FLY00101.mp4

+ Request (application/json)
 + Attributes (object)
        + profile: slowMotion_1728sq_60fps (string, optional, sample) - request a slow motion profile for this recording, which has a 60 fps encoded frame rate. 
        + maxChapterDuration: 180 (number, optional, sample) - request for recording to chapter on 180 second intervals

+ Response 201 (application/json)
 + Attributes (object)
        + profile: slowMotion_1728sq_60fps (string, required, sample) - recording in slow motion
        + maxChapterDuration: 180 (number, required, sample) - active recording chapters on 180 second intervals
        + maxChapterFileSize (number, required, default)
        + hours: 0 (number, required, default)
        + minutes: 0 (number, required, default)
        + seconds: 0 (number, required, default)
 + Header

                        Location: /360fly/video/file/100_3FLY/FLY00201.mp4

### Stop Recording [DELETE]
+ Response 202
+ Response 204

## Liveview [/360fly/camera/liveview]

Settings for the 360fly `rtsp` stream.

+ Attributes
 + url: rtsp://fly.local/live1.sdp (string, required, sample) - liveview rtsp url
 + projection (Projection, required, default) - the projection data for liveview. This mirrors the projection specified in the current profile. See `/camera/profiles/{name}` for profile details. See `/camera/config` for setting current profile.

### Retrieve liveview settings [GET]
+ Response 200 (application/json)
 + Attributes (Liveview)

## Photo [/360fly/camera/photo]

Capture a single high-resolution JPEG image, or multiple images (burst).

+ Attributes (object)
 + count: 1 (number, required, default) - number of photos to take. > 1 implies burst mode

### Take Photo [POST]

* `Location` response header gives url of the captured photo for single shot, or the url of the first photo for burst 
* An empty request body takes a single photo

+ Request (application/json)
+ Attributes (object)
 + count: 3 (number, required) - Take a burst of 3 photos

+ Response 201 (application/json)
 + Header

                        Location: /360fly/media/file/100_3FLY/FLY00801.jpg

+ Request (application/json)

+ Response 201 (application/json)
 + Header

                        Location: /360fly/media/file/137_3FLY/FLY34501.jpg

## Triggered Recording [/360fly/camera/trigger]

Configure camera recording to trigger based on motion or audio detection, or the accelerometer.

 + Attributes (object)
  + type: accel (string, required, default) - trigger type. Options: [accel, motion, audio]
  + sensitivity: 5 (number, required, default) - sensitivity of the trigger mechanism e.g. audio trigger requires a minimum volume to start recording. Range: 1~10
  + delay: 10 (number, required, sample) - Minimum allowed time, in seconds, between two trigger activations 
  + duration: 6 (number, required, sample) - Duration, in seconds, of triggered recordings
  + buffer: 3 (number, optional, sample) - Size of buffered video, in seconds. If omitted or null, video is not buffered.

### Retrieve trigger [GET]

+ Response 200 (application/json)
 + Attributes (Triggered Recording)

+ Response 204

### Create new trigger [PUT]

* _If a trigger already exists, it will be deleted and replaced_

+ Attributes (object)
 + type: motion (string, required, sample) - trigger recording on motion detect
 + sensitivity: 1 (number, required, sample) - low sensitivity i.e. only detect high motion events
 + delay: 600 (number, required, sample) - Wait at least 10 minutes between consecutive triggered recordings
 + duration: 10 (number, required, sample) - Triggered recordings will be 10 seconds long

+ Request (application/json)

+ Response 201 (application/json)
 + Attributes (object)
        + type: motion (string, required, sample)
        + sensitivity: 1 (number, required, sample)
        + delay: 600 (number, required, sample)
        + duration: 10 (number, required, sample)
        + buffer (number, optional, sample) - No video buffering

### Delete trigger [DELETE]

+ Response 204

## Tuning [/360fly/camera/tuning]

+ Attributes (object)
 + ae_lock: false (boolean, required, default) - auto exposure lock/unlock
 + saturation: 100 (number, required, default) - image saturation. Range 0~200
 + max_iso_sensitivity: 8000 (number, required, default) - image iso (which adjusts gain). Range: 1000~64000
 + awb_lock: false (boolean, required, default) - auto white balance lock/unlock
 + brightness: 100 (number, required, default) - image brightness. Range 0~200
 + ae_compensation: 100 (number, required, default) - compensation for auto exposure. Range: 50~200
 + contrast: 100 (number, required, default) - image contrast. Range 0~100
 + max_shutter: 30 (number, required, default) - max shutter speed. Shows denominator e.g. 30 implies 1/30 seconds.

### Retrieve tuning settings [GET]
+ Response 200 (application/json)
 + Attributes (Tuning)

### Modify tuning settings [PUT]
+ Request (application/json)
 + Attributes (Scene)

+ Response 200 (application/json)
 + Attributes (Scene)

### Retrieve tuning options [OPTIONS]
+ Response 200 (application/json)
 + Body     

                        {
                                "ae_lock":{
                                        "default":false,
                                        "type":"boolean"
                                },
                                "saturation":{
                                        "min":0,
                                        "type":"integer",
                                        "default":100,
                                        "max":200
                                },
                                "max_iso_sensitivity":{
                                        "min":1000,
                                        "type":"integer",
                                        "default":8000,
                                        "max":64000
                                },
                                "awb_lock":{
                                        "default":false,
                                        "type":"boolean"
                                },
                                "brightness":{
                                        "min":0,
                                        "type":"integer",
                                        "default":100,
                                        "max":200
                                },
                                "ae_compensation":{
                                        "min":50,
                                        "type":"integer",
                                        "default":100,
                                        "max":200
                                },
                                "contrast":{
                                        "min":0,
                                        "type":"integer",
                                        "default":100,
                                        "max":200
                                },
                                "max_shutter": {
                                        "min":15,
                                        "type":"integer",
                                        "default":30
                                }
                        }

### Reset to default tuning [DELETE]
+ Response 200 (application/json)
 + Attributes (Tuning)

## Scenes Collection [/360fly/camera/scenes]
+ Attributes (object)
 + normal (Tuning, required, default)
 + lowLight (Scene, required)

### Retrieve scenes [GET]
+ Response 200 (application/json)
 + Attributes (Scenes Collection)

## Scene [/360fly/camera/scenes/{name}]

A camera tuning configuration. 

+ Attributes (object)
 + ae_lock: false (boolean, required)
 + saturation: 100 (number, required)
 + max_iso_sensitivity: 6400 (number, required)
 + contrast: 100 (number, required)
 + awb_lock: false (boolean, required)
 + brightness: 100 (number, required)
 + ae_compensation: 100 (number, required)
 + max_shutter: 15 (number, required)

+ Parameters
 + name (required, string, `lowLight`) the relevant scene

### Retrieve scene [GET]

+ Response 200 (application/json)
 + Attributes (Scene)

## Projection List [/360fly/camera/projections]
+ Attributes (object)
 + radial (Projection, required, default) - the default fisheye projection
 + planar (object, required) - standard playback
        + type: planar (string, required)

### Retrieve projection list [GET]

+ Response 200 (application/json)
 + Attributes (Projection List, required, default)

## Projection [/360fly/camera/projection]

Camera's default projection 

+ Attributes (object)
 + type: radial (string, required, default) - class of projection
 + radialMapping: ftheta (string, optional, default) - name of mapping used to map angle to radius on a radial capture image
 + outerAngle: 120 (number, optional, default) - Half of the vertical field of view. The max of the radialMapping's domain.
 + centerRadius: 0.5 0.5 0.5 0.5 (string, optional, default) - The location and size of radial image in camera's normalized sensor coordinates
 + orientation: 180 (number, optional, default) - Can be a number representing degrees from "camera down" (so 180 means "camera up") or a string of four values representing rotation from "camera down" as a quaternion
 + panMin (number, optional)
 + panMax (number, optional)
 + panRange (number, optional)
 + tiltMin (number, optional)
 + tiltMax (number, optional)
 + tiltRange  (number, optional)

### Set Projection [PUT]

For setting projection at manufacturing. Can only be done once.

+ Request (application/json)
 + Attributes (Projection)

+ Response 200 (application/json)
 + Attributes (Projection)




# Group File Handling - extended from Fly1.0

* New attribute: __sessionCount__ in media metadata. It represents the total number of burst photos or chaptering videos in the same session
* All `/360fly/video/file` requests should be mapped to `/360fly/media/file`


## Media Metadata [/360fly/media/meta/{mediaFilePath}]

+ Parameters
    + mediaFilePath (required, string, `100_3FLY/FLY00201.jpg`)
    
+ Attributes (object)
 + type: photo (string, required) - media file types: video, photo
 + modified: `2014-05-18T00:09:16Z` (string, required) - Time & date of last modification to media file (ISO 8601)
 + duration (array[number]) - [clip time, timescale] of duration
 + fileSize: 123490357 (number, required) - File size (in bytes)
 + modification (number, required) - Timestamp of when file was modified (in seconds)
 + name: 001_2FLY/FLY00101.jpg (string, required) - Name of media file
 + id (string, required) - Document ID of media file
 + download (string, required) - Download URL on the 360Fly device
 + durationSeconds (number, required) - duration in seconds
 + instanceID (string, required) - instance ID of media file
 + hasDuration: true (boolean, optional) - whether its duration is zero or not
 + sessionCount: 1 (number, optional) - the total number of burst photos, or the total number of chaptering videos

### Retrieve Media File Information [GET]

* The _retrieve specific media file information_ command requires **authentication**.
* Device _cannot_ be in UMS mode to retrieve this information.
* Note: returns 404 (Not Found) if no media file present.

+ Response 200 (application/json)
 + Attributes (Media Metadata)
 


## Media File Collection [/360fly/media/file{?type,offset,limit}]

##### __Command Parameters__
Characteristic | Value (Range)
---|---
_type_      |   Media type: video, photo; if not specified, means all types
_offset_    |   0 to (total number videos on 360Fly device)
_limit_     |   0 to (total number videos on 360Fly device)

+ Parameters
    + type (optional, string) ... Media file type: video, photo; if not specified, means all types
    + offset (optional, integer, `0`) ... Zero-based offset into the list of files to return.
    + limit (optional, integer, `50`) ... Maximum number of files to return per request.
 
### Retrieve All Media Files [GET]


+ Response 200
    + Body
    
            {
                "items": [
                    {
                        "type": "video"
                        "modified": "2014-05-18T00:09:16Z", 
                        "duration": [
                            12012120, 
                            1000000
                        ], 
                        "fileSize": 21074620, 
                        "modification": 1400371756, 
                        "name": "100_3FLY/FLY00201.mp4", 
                        "id": "cc35a69c-db7b-4141-9cd0-e7b11e0e853c", 
                        "download": "/360fly/media/file/100_3FLY/FLY00201.mp4", 
                        "durationSeconds": 12.01212, 
                        "instanceID": "36e1aa83-b186-4421-95d1-0029dbe96566", 
                        "hasduration": true, 
                        "sessionCount": 1
                    }
                    {
                        "type": "photo"
                        "modified": "2014-05-18T00:09:19Z", 
                        "fileSize": 1104620, 
                        "modification": 1400371759, 
                        "name": "100_3FLY/FLY00101.jpg", 
                        "id": "cc35a69c-db7b-4141-9cd0-e7b11e0e853c", 
                        "download": "/360fly/media/file/100_3FLY/FLY00101.jpg", 
                        "instanceID": "36e1aa83-b186-4421-95d1-0029dbe96566", 
                        "hasduration": false, 
                        "sessionCount": 1
                    }
                ]
                "offset": 0,
                "itemCount": 2
            }


### Delete All Media Files [DELETE]

Delete all media files, related files and empty DCIM folders on the 360Fly device.

* The _delete all media files_ command requires **authentication**.
* Device _cannot_ be in UMS mode to perform this action.
* Successful file deletion results in a 204 (No Content) response.

+ Response 204



## Related Media File Collection [/360fly/media/related/{mediaFilePath}{?relation}]


##### __Command Parameters__
Characteristic | Format |   Value (Range)
---|---|---
mediaFilePath |   "100_3FLY/FLY00201.jpg"  |  the media file
_relation_  |   ""  |   the relation type: "thumbnail", "session". If not specified, all (default)


+ Parameters
     + mediaFilePath (required, string, `100_3FLY/FLY00201.jpg`) ... Media file
     + relation (optional, string) ... Relation type: thumbnail, session

### Retrieve Related Media Files [GET]
+ Request (application/json)

+ Response 200
    + Body
    
               {
                       "photo": "/360fly/media/file/100_3FLY/FLY00201.jpg", 
                       "thumbnail": "/360fly/media/thumbnail/100_3FLY/FLY00501.jpg",
                       "session": [
                        {
                         "photo": "/360fly/media/file/100_3FLY/FLY00201.jpg", 
                         "thumbnail": "/360fly/media/thumbnail/100_3FLY/FLY00501.jpg"
                        },
                        {
                         "photo": "/360fly/media/file/100_3FLY/FLY00202.jpg", 
                         "thumbnail": "/360fly/media/thumbnail/100_3FLY/FLY00502.jpg"
                        },
                        {
                         "photo": "/360fly/media/file/100_3FLY/FLY00203.jpg", 
                         "thumbnail": "/360fly/media/thumbnail/100_3FLY/FLY00503.jpg"
                        }
                       ],
                       "sessionCount":3
               }


+ Request (application/json)

+ Response 200
    + Body
    
               {
                       "recording": "/360fly/media/file/100_3FLY/FLY00201.mp4", 
                       "thumbnail": "/360fly/media/file/100_3FLY/FLY00201.thm",
                       "session": [
                        {
                         "recording": "/360fly/media/file/100_3FLY/FLY00201.mp4", 
                         "thumbnail": "/360fly/media/file/100_3FLY/FLY00201.thm"
                        },
                        {
                         "recording": "/360fly/media/file/100_3FLY/FLY00202.mp4", 
                         "thumbnail": "/360fly/media/file/100_3FLY/FLY00202.thm"
                        },
                        {
                         "recording": "/360fly/media/file/100_3FLY/FLY00203.mp4", 
                         "thumbnail": "/360fly/media/file/100_3FLY/FLY00203.thm"
                        }
                       ],
                       "sessionCount":3
               }
               

### Delete Related Media Files [DELETE]

Delete media file and all its related files, if relation is not specified or equal to session
Delete media file and only its thumbnail, if relation is specified as thumbnail.

* The _Delete Related Media Files_ command requires **authentication**.
* Device _cannot_ be in UMS mode to perform this action.
* Successful file deletion results in a 204 (No Content) response.

+ Response 204



## Media File Retrieval [/360fly/media/file/{mediaFilePath}]

This section provides commands for downloading a media file on the 360Fly device.

+ Parameters
    + mediaFilePath (required, string, `100_3FLY/FLY00201.mp4`) ... the media file

### Download A Specific Media File Command [GET]

* The _download a specific media file_ command requires **authentication**. This is not the same as in Fly1.0. 
* Device _cannot_ be in UMS mode to perform this action.
* A single byte-range request is supported per http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35. The ability to request byte ranges is required by this endpoint for progressive downloading.
* The media file is downloaded and stored in user's root directory.

+ Response 200 (application/octet-stream)

## Media Thumbnail Retrieval [/360fly/media/thumbnail/{mediaFilePath}{?time,timescale}]

This section provides commands for downloading thumbnail for a media file on the 360Fly device.

+ Parameters
    + mediaFilePath (required, string, `100_3FLY/FLY00201.jpg`) ... the media file
    + time (optional, integer, `495000`) ... valid only for video file. The time in media file from which thumbnail is generated.
    + timescale (optional, integer, `3000`) ... valid only for video file. the timescale for time.

### Create and Retrieve Media Thumbnail [GET]

+ Response 200 (application/octet-stream)

# Group Sensors

## GPS [/360fly/sensors/gps]
 ##### __GPS States__
        Value | State
        ---|---
        0 | GPS Off
        1 | GPS On, no fix
        2 | GPS on and has fix

+ Attributes (object)
 + state: 0 (number, required, default) - state of gps. See table below


### Retrieve gps info [GET]
+ Response 200 (application/json)
 + Attributes (GPS)

### Configure gps [PUT]
+ Request (application/json)
 + Attributes (object)
        + state: 1 (number, optional, sample) - turn gps on

+ Response 200 (application/json)
 + Attributes (object)
        + state: 1 (boolean, required, sample) - gps is now on

# Group Network

#### *Network API is NOT a launch requirement*

## Network Interfaces [/360fly/network/interfaces]

+ Attributes (object)
 + ap (Access Point Interface, required) - configuration for network access point
 + station (Station Interface, required) - configuration for station connection

### Retrieve network interfaces [GET]

+ Response 200 (application/json)
 + Attributes (Network Interfaces)

## Access Point Interface [/360fly/network/interfaces/ap]

* Control the AP network interface. `SSID`, `ipAddr`, and `error` are read-only properties. 
* `SSID` matches the 360fly's name. See `/360fly/id`.
* AP password matches the 360fly's password. See `/360fly/id`.
* `state` can only be set to `1` or `2` via `PUT` request.

 ##### __AP Interface States__
        Value | State | Description
        ---|---|---
        0 | WiFi Off | WiFi module not running
        1 | AP Down | Access Point is not active
        2 | AP Up | Access Point is active
        3 | AP in Configuration | AP is being configured by another process
        128 | AP Error | AP interface is down due to error. See `error` property. 

 ##### __AP Interface Errors__
        Value | Description
        ---|---
        0 | No error
        1 | SSID of AP is invalid and cannot be used
        2 | Password for AP security is invalid and cannot be used

+ Attributes (object)
 + state: 2 (number, required, default) - AP state. See below for table of possible values.
 + SSID: 360fly_ABCD (string, required, sample) - SSID of AP network. READ-ONLY
 + security: WPA2 (string, required, default) - Network security type. Options: [NONE, WEP, WPA, WPA2]
 + ipAddr: 192.168.2.1 (string, required, default) - IP address of camera on the AP network. READ-ONLY
 + frequency: 2.4 (number, required, default) - WiFi AP operating frequency (GHz). Options: [2.4, 5.0]
 + channel (number, required, default) - WiFi AP channel. null indicates channel is chosen automatically. READ-ONLY (configurable in a future version) 
 + error: 0 (number, required, default) - error code. See below for table of values. READ-ONLY

### Retrieve AP details [GET]

+ Response 200 (application/json)
 + Attributes (Access Point Interface)

### Configure AP [PUT]

+ Request (application/json)
+ Attributes (object)
 + state: 1 (number, optional, sample) - Request to shut AP down

+ Response 200 (application/json)
 + Attributes (object)
        + state: 1 (number, required, default)
        + SSID: 360fly_ABCD (string, required, sample)
        + security: WPA2 (string, required, default)
        + ipAddr: 192.168.2.1 (string, required, default)
        + frequency: 2.4 (number, required, default)
        + channel (number, required, default)
        + error: 0 (number, required, default)

### Reset AP to default [DELETE]

+ Response 204

## Station Interface [/360fly/network/interfaces/station]

* Control the station network interface. The `password` property is never returned, but can be used to connect to a secure AP via a `PUT` request. 
* `ipAddr`, `error`, and `RSSI` are read-only properties.
* A connection request is made by setting `"state":2` and specifying `SSID`, `security`, `password`, and `saved` via `PUT`
* If attempting to connect to a saved network (see `/360fly/network/saved`), then `security`, `password`, and `saved` may be omitted from connection request.
* If attempting to connect to a saved network, and the request specifies `password` and/or `security`, these properties will be overwritten in the saved network entry (see `/360fly/network/saved`)
* If attempting to connect to an unsaved network, the `saved` property determines if new network will be saved
* `state` can only be set to `1` or `2` via `PUT` request

 ##### __Station Interface States__
        Value | State | Description
        ---|---|---
        0 | WiFi Off | WiFi module not running
        1 | Station Down | Not connected to station
        2 | Station Connecting | Connection is initiated but not complete
        3 | Station Up | Station connected
        4 | Station in Configuration | Station interface is being configured by another process
        128 | AP Error | AP interface error. See `error` property. 

 ##### __Station Interface Errors__
        Value | Summary | Description
        ---|---|---
        0 | No error
        2 | Disconnected by Server | Previous connection lost
        3 | Connection Timeout | Connection attempt failed, possibly because SSID can't be reached
        4 | Self-Assigned Address | Failed to obtain leased IP address via DHCP
        5 | WEP Auth Required | Incorrect security type supplied. Requires WEP
        6 | WPA Auth Required | Incorrect security type supplied. Requires WPA
        7 | Auth Not Accepted | Incorrect Password

+ Attributes (object)
 + state: 1 (number, required, default) - Station interface state. See below table of possible values.
 + SSID (string, required, default) - SSID of the connected network. null when not connected.
 + security (string, required, default) - Security type of connected network. null when not connected. Options: [NONE, WEP, WPA, WPA2, null]
 + password (string, required, default) - Password for connected network. null when not connected. password is never returned
 + saved (boolean, required, default) - Connected network is or isn't a saved network (See /360fly/network/saved). null when not connected
 + ipAddr (string, required, default) - IP address of camera on the connected station network. null when not connected. READ-ONLY
 + RSSI (number, required, default) - RSSI of network connection (measure of signal strength) in dBm + 127. null when not connected. READ-ONLY
 + error: 0 (number, required, default) - error code. See below for table of values. READ-ONLY

### Retrieve Station Interface details [GET]

+ Response 200 (application/json)
+ Attributes (object)
 + state: 1 (number, required, default)
 + SSID (string, required, default)
 + security (string, required, default)
 + saved (boolean, required, default)
 + ipAddr (string, required, default)
 + RSSI (number, required, default)
 + error: 0 (number, required, default)

### Connect/disconnect network [PUT]

+ Attributes (object)
 + state: 2 (number, optional, sample) - connect to station
 + SSID: officeNet (string, optional, sample) - connect to network with SSID officeNet
 + security: WPA2 (string, optional, sample) - security type of officeNet
 + password: passphrase54321 (string, optional, sample) - password for officeNet
 + saved: true (boolean, optional, default) - save officeNet. See /360fly/network/saved
+ Request (application/json)

+ Response 200 (application/json)
 + Attributes (object)
        + state: 2 (number, required, sample)
        + SSID: officeNet (string, required, sample)
        + security: WPA2 (string, required, sample)
        + saved: true (boolean, required, sample)
        + ipAddr (string, required, default) - have not gotten IP address lease yet
        + RSSI: 73 (number, required, sample)
        + error: 0 (number, required, default)

### Disconnect from Station [DELETE]

Reset Station Interface to default values

+ Response 204

## Network Scan [/360fly/network/scan{?limit}]

 ##### __Scan Results Entry__
        Value | Description
        ---|---
        SSID | SSID of found network
        security | security type of found network. Options: [WPA, WPA2, WEP, NONE]
        saved | credentials of found network are saved on your 360fly
        RSSI | signal strength of found network, in dBm + 127

Scan for WiFi networks. Results are returned in order of signal strength (RSSI). See table above for description of a scan results entry

+ Attributes (array)
 + entry0 (object, optional, sample)
        + SSID: firstNetworkSSID (string, required, sample)
        + security: WPA2 (string, required, sample)
        + saved: true (boolean, required, sample)
        + RSSI: 71 (number, required, sample)
 + entry1 (object, optional, sample)
        + SSID: secondNetworkSSID (string, required, sample)
        + security: WEP (string, required, sample)
        + saved: false (boolean, required, sample)
        + RSSI: 68 (number, required, sample)

+ Parameters
 + limit (optional, number) ... Maximum number of results

### Retrieve scan results [GET]

+ Response 200 (application/json)
 + Attributes (Network Scan)

## Saved Networks [/360fly/network/saved{?offset,limit}]

* Saved networks are returned in order of their connection priority

+ Attributes (array)
 + entry0 (object, optional, sample)
        + id: 0 (number, required, sample)
        + SSID: firstNetworkSSID (string, required, sample)
        + security: WPA2 (string, required, sample)
        + connected: false (boolean, required, sample)
 + entry1 (Saved Network, optional, sample)

+ Parameters
 + offset (optional, number) ... results array returned starting at `offset`
 + limit (optional, number) ... maximum number of returned results

### Retrieve saved networks [GET]
+ Response 200 (application/json)
 + Attributes (Saved Networks)

### Forget all networks [DELETE]
+ Response 204

## Saved Network [/360fly/network/saved/{id}]

+ Attributes (object)
 + id: 1 (number, required, sample) - index of entry in saved networks array. Also indicates connection priority
 + SSID: someSavedNetwork (string, required, sample) - SSID of this saved network
 + security: NONE (string, required, sample) - security of this saved network
 + connected: false (boolean, required, sample) - indicates 360fly is currently connected to this network

+ Parameters
 + id (required, number, `1`) ... id of the saved network 

### Retrieve saved network [GET]
+ Response 200 (application/json)
 + Attributes (Saved Network)

### Forget network [DELETE]

+ Response 204

# Group Bluetooth

## Bluetooth Bonded Devices Collection [/360fly/bluetooth/bonds{?name}]

+ Attributes (array)
 + entry0 (Bluetooth Bonded Device, optional, sample)
 + entry1 (object, optional, sample)
        + id: 1 (number, required, sample)
        + name: BTHeadSet1 (string, required, sample)
        + RSSI: 0 (number, required, sample)

+ Parameters
 + name (string, optional) ... filter response by `name` property

### Retrieve bonded devices [GET]

* devices are ordered by connection priority

+ Response 200 (application/json)
 + Attributes (Bluetooth Bonded Devices Collection)

### Forget all bonded devices [DELETE]

+ Response 204

## Bluetooth Bonded Device [/360fly/bluetooth/bonds/{id}]

+ Attributes (object)
 + id: 0 (number, required, sample) - index of device in array of Bonded Devices (see /360fly/bluetooth/bonds)
 + name: BTHeadSet0 (string, required, sample) - device name
 + RSSI: 50 (number, required, sample) - signal strength, measured in dBm + 127

+ Parameters
 + id (required, number, `0`) ... index of device in array of bonded devices (see /360fly/bluetooth/bonds)

### Retrieve bonded device [GET]

+ Response 200 (application/json)
 + Attributes (Bluetooth Bonded Device)

### Forget bonded device [DELETE]

+ Response 204
 
## Bluetooth Connected Devices Collection [/360fly/bluetooth/connections]

+ Attributes (array)
 + entry0 (Bluetooth Connected Device, optional, sample)

### Retrieve connected devices [GET]

* For now, only one device can be connected at a time

+ Response 200 (application/json)
 + Attributes (Bluetooth Connected Devices Collection)

### Disconnect all devices [DELETE]
+ Response 204

## Bluetooth Connected Device [/360fly/bluetooth/connections/{id}]

+ Attributes (object)
 + id: 0 (number, required, sample) - index of device in connected devices array (see /360fly/bluetooth/connections)
 + name: myBTDevice (string, required, sample) - name of connected device
 + bonded: false (boolean, required, sample) - is device bonded to 360fly
 + RSSI: 59 (number, required, sample) - signal strength, measured in dBm + 127

+ Parameters
 + id (required, number, `0`) ... index of device in array of connected devices (see `/360fly/bluetooth/connections`)

### Retrieve connected device [GET]

+ Response 200 (application/json)
 + Attributes (Bluetooth Connected Device)

### Pair/Bond or unpair/unbond with connected device [PUT]

* Should always specify `bonded`, and optionally `pin` if pairing/bonding requires a security pin. All other properties are read-only.
* Pairing also means "bonding with connected device"
* Successful pair/bond requests return a `Location` header with url to new bond in the bonds collection (see `/360fly/bluetooth/bonds`)
* If the bonds collection is at maximum, then the oldest bond is replaced by the new bond
* Unsuccessful pairing requests will respond with an `error` property. See table below.
 ##### __Error Codes__
        Value | Description
        ---|---
        0 | No Error
        1 | Incorrect Pin
        2 | Pairing attempt timed out (Device may no longer be in range)

+ Request (application/json)
 + Attributes (object)
        + bonded: true (boolean, required, sample) - attempt to pair with connected device
        + pin: 1234 (number, optional, sample) - security pin for connected device

+ Response 200 (application/json)
 + Attributes (object)
        + id: 0 (number, required, sample)
        + name: BTHeadSet0 (string, required, sample)
        + bonded: true (boolean, required, sample)
        + RSSI: 56 (number, required, sample)
 + Header

                        Location: https://${HOST}/360fly/bluetooth/bonds/2

+ Request (application/json)
 + Attributes (object)
        + bonded: false (boolean, required, sample) - attempt to unpair/unbond the connected device

+ Response 200 (application/json)
 + Attributes (Bluetooth Connected Device)

+ Request (application/json)
 + Attributes (object)
        + bonded: true (boolean, required, sample) - attempt to pair/bond with connected device
        + pin: 4321 (number, optional, sample) - incorrect security pin for connected device

+ Response 401 (application/json)
 + Attributes (object)
        + error: 1 (number, required, sample)

+ Request (application/json)
 + Attributes (object)
        + bonded: true (boolean, required, sample) - attempt to pair/bond, but no pin being supplied

+ Response 401 (application/json)
 + Attributes (object)
        + error: 1 (number, required, sample)


### Disconnect device [DELETE]

+ Response 204

## Bluetooth Scan Results Collection [/360fly/bluetooth/scan{?limit}]

Scan for advertising peripherals
* Results are ordered by RSSI (signal strength)
* Only supported remote audio peripherals are shown

+ Attributes (array)
 + entry0 (object)
        + id: 0 (number, required, sample)
        + name: BTHeadSet0 (string, required, sample)
        + connected: false (boolean, required, sample)
        + bonded: true (boolean, required, sample)
        + RSSI: 80 (number, required, sample)
 + entry1 (Bluetooth Scan Result)

+ Parameters
 + limit (optional, number) ... Maximum number of results

### Retrieve scan results [GET]
+ Response 200 (application/json)
 + Attributes (Bluetooth Scan Results Collection)

## Bluetooth Scan Result [/360fly/bluetooth/scan/{id}]

+ Attributes (object)
 + id: 1 (number, required, sample) - index of peripheral in scan results (see /360fly/bluetooth/scan)
 + name: BTHeadSet3 (string, required, sample) - name of advertising peripheral
 + connected: false (boolean, required, sample) - is peripheral currently connected
 + bonded: false (boolean, required, sample) - is peripheral a bonded device
 + RSSI: 60 (number, required, sample) - signal strength of advertising peripheral, in dBm + 127

+ Parameters
 + id (required, number, `1`) ... index of peripheral in scan results (see `/360fly/bluetooth/scan`)

### Retrieve scan result [GET]

+ Response 200 (application/json)
 + Attributes (Bluetooth Scan Result)

### Connect/disconnect device [PUT]
* Should always specify `connected`, and optionally specify `pin`.  All other properties are read-only 
* If number of connections is at maximum, the oldest connection will be dropped so this new connection can be made
* Successful connections return a `Location` header with the newly connected device url
* If possible, 360fly will attempt to pair/bond with the newly connected device. Newly paired/bonded peripherals are added to bonds collection (see `/360fly/bluetooth/bonds`). 
* Some peripherals require a `pin` for pairing/bonding. Previously bonded peripherals can pair without specifying `pin`.
* If the bonds collection is at maximum, then the oldest bond is replaced by the new bond
* Failed requests will return an error code. See table below

 ##### __Error Codes__
        Value | Description
        ---|---
        0 | No Error
        1 | Connection attempt timed out (Device may no longer be in range)

+ Request (application/json)
 + Attributes (object)
        + connected: true (boolean, required, sample)
        + pin: 1234 (number, optional, sample) - correct pairing pin

+ Response 200 (application/json)
 + Attributes (object)
        + id: 1 (number, required, sample)
        + name: BTHeadSet3 (string, required, sample)
        + connected: true (boolean, required, sample)
        + bonded: true (boolean, required, sample) - the successful connection also paired/bonded
        + RSSI: 67 (number, required, sample)
 + Header

                        Location: https://${HOST}/360fly/bluetooth/connections/0

+ Request (application/json)
 + Attributes (object)
        + connected: true (boolean, required, sample)
        + pin: 4321 (number, optional, sample) - incorrect pairing pin

+ Response 200 (application/json)
 + Attributes (object)
        + id: 1 (number, required, sample)
        + name: BTHeadSet3 (string, required, sample)
        + connected: true (boolean, required, sample)
        + bonded: false (boolean, required, sample) - pairing/bonding was unsuccessful due to incorrect pin
        + RSSI: 67 (number, required, sample)
 + Header

                        Location: https://${HOST}/360fly/bluetooth/connections/0

+ Request (application/json)
 + Attributes (object)
        + connected: false (boolean, optional, sample) - disconnect

+ Response 200 (application/json)
 + Attributes (Bluetooth Scan Result)

+ Request (application/json)
 + Attributes (object)
        + connected: true (boolean, optional, sample) - connect, but do not specify security pin

+ Response 200 (application/json)
 + Attributes (object)
        + id: 1 (number, required, sample)
        + name: BTHeadSet3 (string, required, sample)
        + connected: true (boolean, required, sample)
        + bonded: false (boolean, required, sample) - pairing/bonding didn't happen since no security pin was supplied
        + RSSI: 67 (number, required, sample)
 + Header

                        Location: https://${HOST}/360fly/bluetooth/connections/0
        
